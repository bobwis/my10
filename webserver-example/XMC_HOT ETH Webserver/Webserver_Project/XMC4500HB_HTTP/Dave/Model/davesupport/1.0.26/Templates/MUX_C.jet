<%@ jet package= "CodeGenerator" class="mux_c_template"
imports= "java.util.* com.ifx.davex.appjetinteract.App2JetInterface" %>
<% App2JetInterface app = (App2JetInterface) argument; %>
<% int xmc4Device = -1;
   xmc4Device = ((app.getSoftwareId().substring(0,1).compareTo("4")==0)?1:0);
   int xmc1Device = -1;
   xmc1Device = ((app.getSoftwareId().substring(0,1).compareTo("1")==0)?1:0); %>

/*******************************************************************************
 Copyright (c) 2011, Infineon Technologies AG                                 **
 All rights reserved.                                                         **
                                                                              **
 Redistribution and use in source and binary forms, with or without           **
 modification,are permitted provided that the following conditions are met:   **
                                                                              **
 *Redistributions of source code must retain the above copyright notice,      **
 this list of conditions and the following disclaimer.                        **
 *Redistributions in binary form must reproduce the above copyright notice,   **
 this list of conditions and the following disclaimer in the documentation    **
 and/or other materials provided with the distribution.                       **
 *Neither the name of the copyright holders nor the names of its contributors **
 may be used to endorse or promote products derived from this software without**
 specific prior written permission.                                           **
                                                                              **
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
 ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
 LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
 SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
 CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
 POSSIBILITY OF SUCH DAMAGE.                                                  **
                                                                              **
 To improve the quality of the software, users are encouraged to share        **
 modifications, enhancements or bug fixes with Infineon Technologies AG       **
 dave@infineon.com).                                                          **
                                                                              **
********************************************************************************
**                                                                            **
**                                                                            **
** PLATFORM : Infineon <Microcontroller name, step>                           **
**                                                                            **
** COMPILER : Compiler Independent                                            **
**                                                                            **
** MODIFICATION DATE : February 12, 2013                                       **
**                                                                            **
*******************************************************************************/
/**
 * @file  MULTIPLEXER.c
 *
 * @brief This file contains implementation of DAVE Support function which 
 * uses to configure multiplexer register values.
 *
 */

/*******************************************************************************
**                      Include Files                                         **
*******************************************************************************/
#include "../../inc/DAVESupport/DAVE3.h"

/*******************************************************************************
**                 Function declarations                                     **
*******************************************************************************/
/*******************************************************************************
** Syntax           : void DAVE_MUX_Init(void)                                **
**                                                                            **
** Reentrancy       : None                                                    **
**                                                                            **
** Parameters (in)  : void                                                    **
**                                                                            **
** Parameters (out) : none                                                    **
**                                                                            **
** Return value     : none                                                    **
**                                                                            **
** Description      : This is the Mux configuration                           **
**                                                                            **
*******************************************************************************/
           
void DAVE_MUX_Init(void)
{  
<% String TempPeri = null;
  String MyPeriName = null;
  String MyTempPeriName = null;
  Object MyObj = null;     
 ArrayList<String> peri; 
 peri=(ArrayList<String>)(app.getPeripherals());
 HashMap PeriHashMap = new HashMap();  
     for (int k = 0; k < peri.size(); k++) {
         TempPeri = peri.get(k); 
         if (TempPeri.indexOf("/peripheral/") > 0 ){ MyPeriName = TempPeri.substring(TempPeri.indexOf("/peripheral/") + 1, TempPeri.lastIndexOf("/"));} else 
         if (TempPeri.indexOf("/port/") > 0 ){ MyPeriName = TempPeri.substring(TempPeri.indexOf("/port/") + 1, TempPeri.lastIndexOf("/"));}
         PeriHashMap.put(MyPeriName,k); 
    } 
   Set set = PeriHashMap.entrySet(); 
   Iterator i = set.iterator();
     while(i.hasNext()) { 
     Map.Entry peri_me = (Map.Entry)i.next();  
           MyObj = peri_me.getKey();              
           MyTempPeriName = MyObj.toString(); 
    %>
    <%       
     //********* Capture/Compare Unit 4 (CAPCOM4) CONFIGURATIONS --- BEGIN ************************* 
     if(MyTempPeriName.compareTo("peripheral/ccu4") == 0) {
         String uriStr_CCU4 = "peripheral/ccu4/"; %>
        //********* Capture/Compare Unit 4 (CAPCOM4) CONFIGURATIONS ************************* 
        <% for (int Module = 0; Module < 4; Module++) { 
               String StrTempCC4Reset = null; 
               String StrTempCC4Actual = null; 
               String uriStrTemp = null;        
               uriStrTemp = uriStr_CCU4+ Module +"/global/gctrl_pcis";
               StrTempCC4Reset = app.getResetValue(uriStrTemp);  StrTempCC4Actual = app.getMuxValue(uriStrTemp);              
               if(StrTempCC4Reset.compareTo(StrTempCC4Actual) < 0) {%>
               
    // GCTRL: Global Control Register.
    WR_REG(CCU4<%=Module%>->GCTRL, CCU4_GCTRL_PCIS_Msk, CCU4_GCTRL_PCIS_Pos, <%=StrTempCC4Actual%> );
            <% } 
                 for (int Slice = 0; Slice < 4; Slice++) { 
                       String tempStrEv0is = null;                    
                       String tempStrEv1is = null;                    
                       String tempStrEv2is = null;                    
                       String StrTempCC4ActualX = null; 
                       String StrTempCC4ActualY = null; 
                       String StrTempCC4ActualZ = null; 
                       String uriStr_Ev0is = null; 
                       String uriStr_Ev1is = null; 
                       String uriStr_Ev2is = null; 
                       String uriStr_Slice = null; 
                       uriStr_Slice = Integer.toString(Module) +"/cc4/"+ Integer.toString(Slice) +"/cc4"+ Integer.toString(Slice);
                       uriStr_Ev0is = uriStr_CCU4 + uriStr_Slice +"ins_ev0is";
                       StrTempCC4Reset = app.getResetValue(uriStr_Ev0is);
                       StrTempCC4ActualX = app.getMuxValue(uriStr_Ev0is);                   
                       if(StrTempCC4Reset.compareTo(StrTempCC4ActualX) < 0) {
                        tempStrEv0is = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->INS, CCU4_CC4_INS_EV0IS_Msk, CCU4_CC4_INS_EV0IS_Pos, CCU4xINy" + (char)(Integer.parseInt(StrTempCC4ActualX.trim()) + 65) + ");";
                       } 
                       uriStr_Ev1is = uriStr_CCU4 + uriStr_Slice +"ins_ev1is";
                       StrTempCC4Reset = app.getResetValue(uriStr_Ev1is); 
                       StrTempCC4ActualY = app.getMuxValue(uriStr_Ev1is);                   
                       if (StrTempCC4Reset.compareTo(StrTempCC4ActualY) < 0) {
                            tempStrEv1is = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->INS, CCU4_CC4_INS_EV1IS_Msk, CCU4_CC4_INS_EV1IS_Pos, CCU4xINy" + (char)(Integer.parseInt(StrTempCC4ActualY.trim()) + 65) + ");"; 
                       }  
                       uriStr_Ev2is = uriStr_CCU4 + uriStr_Slice +"ins_ev2is";
                       StrTempCC4Reset = app.getResetValue(uriStr_Ev2is);
                       StrTempCC4ActualZ = app.getMuxValue(uriStr_Ev2is);               
                       if (StrTempCC4Reset.compareTo(StrTempCC4ActualZ) < 0) {
                         tempStrEv2is = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->INS, CCU4_CC4_INS_EV2IS_Msk, CCU4_CC4_INS_EV2IS_Pos, CCU4xINy" + (char)(Integer.parseInt(StrTempCC4ActualZ.trim()) + 65) + ");"; 
                       } 
                       if((tempStrEv0is != null) | (tempStrEv1is != null) | (tempStrEv2is != null) ){%>
                       
    // Configuring CCU4<%=Module%> CC4<%=Slice%>INS - Input Selector Configuration
                        <% if(tempStrEv0is != null){%>

    <%= tempStrEv0is%>                   
                        <% } 
                           if(tempStrEv1is != null){%>

    <%= tempStrEv1is%>                   
                        <% } 
                           if(tempStrEv2is != null){%>

    <%= tempStrEv2is%>                   
                        <% }
                     } 
             }             
                 for (int Slice = 0; Slice < 4; Slice++) { 
                       String tempStr_posr = null;                    
                       String tempStr_cmsr = null;                    
                       String tempStr_e0sr = null;                    
                       String tempStr_e1sr = null;                    
                       String tempStr_e2sr = null;                    
                       String StrTempCC4ActualX = null; 
                       String StrTempCC4ActualY = null; 
                       String StrTempCC4Actual_e0sr = null; 
                       String StrTempCC4Actual_e1sr = null; 
                       String StrTempCC4Actual_e2sr = null; 
                       String uriStr_posr = null; 
                       String uriStr_cmsr = null; 
                       String uriStr_e0sr = null; 
                       String uriStr_e1sr = null; 
                       String uriStr_e2sr = null; 
                       String uriStr_Slice = null; 
                       uriStr_Slice = Integer.toString(Module) +"/cc4/"+ Integer.toString(Slice) +"/cc4"+ Integer.toString(Slice);
                       uriStr_posr = uriStr_CCU4 + uriStr_Slice +"srs_posr"; 
                       StrTempCC4Reset = app.getResetValue(uriStr_posr);
                       StrTempCC4ActualX = app.getMuxValue(uriStr_posr);                
                       if(StrTempCC4Reset.compareTo(StrTempCC4ActualX) < 0) {
                          tempStr_posr = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->SRS, CCU4_CC4_SRS_POSR_Msk, CCU4_CC4_SRS_POSR_Pos, CCU_SR" + StrTempCC4ActualX + ");"; 
                       } 
                       uriStr_cmsr = uriStr_CCU4 + uriStr_Slice +"srs_cmsr";
                       StrTempCC4Reset = app.getResetValue(uriStr_cmsr);
                       StrTempCC4ActualY = app.getMuxValue(uriStr_cmsr);                   
                       if (StrTempCC4Reset.compareTo(StrTempCC4ActualY) < 0) {
                          tempStr_cmsr = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->SRS, CCU4_CC4_SRS_CMSR_Msk, CCU4_CC4_SRS_CMSR_Pos, CCU_SR" + StrTempCC4ActualY + ");"; 
                       } 
                       uriStr_e0sr = uriStr_CCU4 + uriStr_Slice +"srs_e0sr";
                       StrTempCC4Reset = app.getResetValue(uriStr_e0sr);
                       StrTempCC4Actual_e0sr = app.getMuxValue(uriStr_e0sr);                   
                       if (StrTempCC4Reset.compareTo(StrTempCC4Actual_e0sr) < 0) {
                          tempStr_e0sr = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->SRS, CCU4_CC4_SRS_E0SR_Msk, CCU4_CC4_SRS_E0SR_Pos, CCU_SR" + StrTempCC4Actual_e0sr + ");"; 
                       } 
                       uriStr_e1sr = uriStr_CCU4 + uriStr_Slice +"srs_e1sr"; 
                       StrTempCC4Reset = app.getResetValue(uriStr_e1sr);
                       StrTempCC4Actual_e1sr = app.getMuxValue(uriStr_e1sr);                   
                       if (StrTempCC4Reset.compareTo(StrTempCC4Actual_e1sr) < 0) {
                         tempStr_e1sr = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->SRS, CCU4_CC4_SRS_E1SR_Msk, CCU4_CC4_SRS_E1SR_Pos, CCU_SR" + StrTempCC4Actual_e1sr + ");"; 
                       } 
                       uriStr_e2sr = uriStr_CCU4 + uriStr_Slice +"srs_e2sr";
                       StrTempCC4Reset = app.getResetValue(uriStr_e2sr);
                       StrTempCC4Actual_e2sr = app.getMuxValue(uriStr_e2sr);                    
                       if (StrTempCC4Reset.compareTo(StrTempCC4Actual_e2sr) < 0) {
                         tempStr_e2sr = "WR_REG(CCU4"+ Integer.toString(Module) +"_CC4"+ Integer.toString(Slice) +"->SRS, CCU4_CC4_SRS_E2SR_Msk, CCU4_CC4_SRS_E2SR_Pos, CCU_SR" + StrTempCC4Actual_e2sr + ");"; 
                       } 
                       if((tempStr_posr != null)|(tempStr_cmsr != null)|(tempStr_e0sr != null)|(tempStr_e1sr != null)|(tempStr_e2sr != null) ){%>
                       
    // Configuring CCU4<%=Module%>_CC4<%=Slice%>SRS  =  Service Request Selector
                        <% if(tempStr_posr != null){%>

    <%= tempStr_posr%>    <% } 
                           if(tempStr_cmsr != null){%>

    <%= tempStr_cmsr%>    <% } 
                           if(tempStr_e0sr != null){%>

    <%= tempStr_e0sr%>    <% }
                           if(tempStr_e1sr != null){%>

    <%= tempStr_e1sr%>    <% }
                           if(tempStr_e2sr != null){%>

    <%= tempStr_e2sr%>    <% }
                       } 
             } 
         }
     } 
       //********* Capture/Compare Unit 4 (CAPCOM4) CONFIGURATIONS ---  END ************************* 
       %>
    <% 
    //********* Capture/Compare Unit 8 (CAPCOM8) CONFIGURATIONS BEGIN ************************* 
       if(MyTempPeriName.compareTo("peripheral/ccu8") == 0) {
          String uriStr_CCU8 = "peripheral/ccu8/"; %>
        //********* Capture/Compare Unit 8 (CAPCOM8) CONFIGURATIONS *************************
        <% for (int Module = 0; Module < 3; Module++) { 
               String StrTempCC8Reset = null; 
               String StrTempCC8Actual = null; 
               String uriCC8StrTemp = null;        
               uriCC8StrTemp = uriStr_CCU8+ Module +"/global/gctrl_pcis";
               StrTempCC8Reset = app.getResetValue(uriCC8StrTemp);  StrTempCC8Actual = app.getMuxValue(uriCC8StrTemp);              
               if(StrTempCC8Reset.compareTo(StrTempCC8Actual) < 0) {%>
               
    // GCTRL: Global Control Register.
    WR_REG(CCU8<%=Module%>->GCTRL, CCU8_GCTRL_PCIS_Msk, CCU8_GCTRL_PCIS_Pos, <%=StrTempCC8Actual%> );
            <% } 
                 for (int Slice = 0; Slice < 4; Slice++) { 
                       String tempC8StrEv0is = null; String tempC8StrEv1is = null; String tempC8StrEv2s = null;                   
                       String StrTempCC8ActualEv0is = null; 
                       String StrTempCC8ActualEv1is = null; 
                       String StrTempCC8Actual_ev2s = null; 
                       String uriC8Str_Ev0is = null; String uriC8Str_Ev1is = null; String uriC8Str_ev2s = null;
                       String uriCC8Str_Slice = null; 
                       uriCC8Str_Slice = Integer.toString(Module) +"/cc8/"+ Integer.toString(Slice) +"/";
                       uriC8Str_Ev0is = uriStr_CCU8 + uriCC8Str_Slice +"ins_ev0is";                
                       StrTempCC8Reset = app.getResetValue(uriC8Str_Ev0is);
                       StrTempCC8ActualEv0is = app.getMuxValue(uriC8Str_Ev0is);                   
                       if(StrTempCC8Reset.compareTo(StrTempCC8ActualEv0is) < 0) {
                          tempC8StrEv0is = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->INS, CCU8_CC8_INS_EV0IS_Msk, CCU8_CC8_INS_EV0IS_Pos, CCU8xINy" +  (char)(Integer.parseInt(StrTempCC8ActualEv0is.trim()) + 65)  + ");"; 
                       } 
                       uriC8Str_Ev1is = uriStr_CCU8 + uriCC8Str_Slice +"ins_ev1is";
                       StrTempCC8Reset = app.getResetValue(uriC8Str_Ev1is); 
                       StrTempCC8ActualEv1is = app.getMuxValue(uriC8Str_Ev1is);                   
                       if (StrTempCC8Reset.compareTo(StrTempCC8ActualEv1is) < 0) {
                          tempC8StrEv1is = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->INS, CCU8_CC8_INS_EV1IS_Msk, CCU8_CC8_INS_EV1IS_Pos, CCU8xINy" + (char)(Integer.parseInt(StrTempCC8ActualEv1is.trim()) + 65) + ");"; 
                       }  
                       uriC8Str_ev2s = uriStr_CCU8 + uriCC8Str_Slice +"ins_ev2s";
                       StrTempCC8Reset = app.getResetValue(uriC8Str_ev2s);
                       StrTempCC8Actual_ev2s = app.getMuxValue(uriC8Str_ev2s);               
                       if (StrTempCC8Reset.compareTo(StrTempCC8Actual_ev2s) < 0) {
                         tempC8StrEv2s = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->INS, CCU8_CC8_INS_EV2IS_Msk, CCU8_CC8_INS_EV2IS_Pos, CCU8xINy" + (char)(Integer.parseInt(StrTempCC8Actual_ev2s.trim()) + 65) + ");"; 
                       } 
                      if((tempC8StrEv0is != null) | (tempC8StrEv1is != null) | (tempC8StrEv2s != null) ){%>
                      
            // Configuring CCU8<%=Module%> CC8<%=Slice%>INS - Input Selector Configuration
                        <% if(tempC8StrEv0is != null){%>

    <%= tempC8StrEv0is%>                   
                        <% } 
                           if(tempC8StrEv1is != null){%>

    <%= tempC8StrEv1is%>                   
                        <% } 
                           if(tempC8StrEv2s != null){%>

    <%= tempC8StrEv2s%>                   
                        <% }  
                        }  
                    }             
                 for (int Slice = 0; Slice < 4; Slice++) { 
                       String tempStr_posr = null;                    
                       String tempStr_cm1sr = null;                    
                       String tempStr_cm2sr = null;                    
                       String tempStr_e0sr = null;                    
                       String tempStr_e1sr = null;                    
                       String tempStr_e2sr = null;                    
                       String StrTempCC8Actual_posr = null; 
                       String StrTempCC8Actual_cm1sr = null; 
                       String StrTempCC8Actual_cm2sr = null; 
                       String StrTempCC8Actual_e0sr = null; 
                       String StrTempCC8Actual_e1sr = null; 
                       String StrTempCC8Actual_e2sr = null; 
                       String uriStr_posr = null; 
                       String uriStr_cm1sr = null; 
                       String uriStr_cm2sr = null; 
                       String uriStr_e0sr = null; 
                       String uriStr_e1sr = null; 
                       String uriStr_e2sr = null; 
                       String uriCC8Str_Slice = null; 
                       uriCC8Str_Slice = Integer.toString(Module) +"/cc8/"+ Integer.toString(Slice) +"/";
                       uriStr_posr = uriStr_CCU8 + uriCC8Str_Slice +"srs_posr"; 
                       StrTempCC8Reset = app.getResetValue(uriStr_posr);
                       StrTempCC8Actual_posr = app.getMuxValue(uriStr_posr);                
                       if(StrTempCC8Reset.compareTo(StrTempCC8Actual_posr) < 0) {
                          tempStr_posr = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->SRS, CCU8_CC8_SRS_POSR_Msk, CCU8_CC8_SRS_POSR_Pos, CCU_SR" + StrTempCC8Actual_posr + ");"; 
                       } 
                       uriStr_cm1sr = uriStr_CCU8 + uriCC8Str_Slice +"srs_cm1sr";
                       StrTempCC8Reset = app.getResetValue(uriStr_cm1sr);
                       StrTempCC8Actual_cm1sr = app.getMuxValue(uriStr_cm1sr);                   
                       if (StrTempCC8Reset.compareTo(StrTempCC8Actual_cm1sr) < 0) {
                          tempStr_cm1sr = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->SRS, CCU8_CC8_SRS_CM1SR_Msk, CCU8_CC8_SRS_CM1SR_Pos, CCU_SR" + StrTempCC8Actual_cm1sr + ");"; 
                       } 
                       uriStr_cm2sr = uriStr_CCU8 + uriCC8Str_Slice +"srs_cm2sr";
                       StrTempCC8Reset = app.getResetValue(uriStr_cm2sr);
                       StrTempCC8Actual_cm2sr = app.getMuxValue(uriStr_cm2sr);                   
                       if (StrTempCC8Reset.compareTo(StrTempCC8Actual_cm2sr) < 0) {
                          tempStr_cm2sr = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->SRS, CCU8_CC8_SRS_CM2SR_Msk, CCU8_CC8_SRS_CM2SR_Pos, CCU_SR" + StrTempCC8Actual_cm2sr + ");"; 
                       } 
                       uriStr_e0sr = uriStr_CCU8 + uriCC8Str_Slice +"srs_e0sr";
                       StrTempCC8Reset = app.getResetValue(uriStr_e0sr);
                       StrTempCC8Actual_e0sr = app.getMuxValue(uriStr_e0sr);                   
                       if (StrTempCC8Reset.compareTo(StrTempCC8Actual_e0sr) < 0) {
                          tempStr_e0sr = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->SRS, CCU8_CC8_SRS_E0SR_Msk, CCU8_CC8_SRS_E0SR_Pos, CCU_SR" + StrTempCC8Actual_e0sr + ");"; 
                       } 
                       uriStr_e1sr = uriStr_CCU8 + uriCC8Str_Slice +"srs_e1sr"; 
                       StrTempCC8Reset = app.getResetValue(uriStr_e1sr);
                       StrTempCC8Actual_e1sr = app.getMuxValue(uriStr_e1sr);                   
                       if (StrTempCC8Reset.compareTo(StrTempCC8Actual_e1sr) < 0) {
                         tempStr_e1sr = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->SRS, CCU8_CC8_SRS_E1SR_Msk, CCU8_CC8_SRS_E1SR_Pos, CCU_SR" + StrTempCC8Actual_e1sr + ");"; 
                       } 
                       uriStr_e2sr = uriStr_CCU8 + uriCC8Str_Slice +"srs_e2sr";
                       StrTempCC8Reset = app.getResetValue(uriStr_e2sr);
                       StrTempCC8Actual_e2sr = app.getMuxValue(uriStr_e2sr);                    
                       if (StrTempCC8Reset.compareTo(StrTempCC8Actual_e2sr) < 0) {
                         tempStr_e2sr = "WR_REG(CCU8"+ Integer.toString(Module) +"_CC8"+ Integer.toString(Slice) +"->SRS, CCU8_CC8_SRS_E2SR_Msk, CCU8_CC8_SRS_E2SR_Pos, CCU_SR" + StrTempCC8Actual_e2sr + ");"; 
                       } 
                       if((tempStr_posr != null)|(tempStr_cm1sr != null)|(tempStr_cm2sr != null)|(tempStr_e0sr != null)|(tempStr_e1sr != null)|(tempStr_e2sr != null) ){%>
                       
            // Configuring CCU8<%=Module%>_CC8<%=Slice%>SRS  =  Service Request Selector
                        <% if(tempStr_posr != null){%>

            <%= tempStr_posr%>    <% } 
                           if(tempStr_cm1sr != null){%>

            <%= tempStr_cm1sr%>    <% } 
                           if(tempStr_cm2sr != null){%>

            <%= tempStr_cm2sr%>    <% } 
                           if(tempStr_e0sr != null){%>

            <%= tempStr_e0sr%>    <% }
                           if(tempStr_e1sr != null){%>

            <%= tempStr_e1sr%>    <% }
                           if(tempStr_e2sr != null){%>

            <%= tempStr_e2sr%>    <% }
                       } 
              } 
         }  
     } 
     //-- END OF Capture/Compare Unit 8 (CAPCOM8) CONFIGURATIONS -- 
     %>
     <% 
      //********* Ethernet MAC CONFIGURATIONS BEGIN ************************* 
      if(MyTempPeriName.compareTo("peripheral/eth") == 0) {
       String uriStr_ETH = "peripheral/eth/0/eth/"; %>
    //********* Ethernet MAC CONFIGURATIONS *************************
                <% String StrResetETH = null;
                   String StrETHcon_rxd0 = null; String ActETHcon_rxd0 = null; String uriETHcon_rxd0 = null; 
                   String StrETHcon_rxd1 = null; String ActETHcon_rxd1 = null; String uriETHcon_rxd1 = null; 
                   String StrETHcon_rxd2 = null; String ActETHcon_rxd2 = null; String uriETHcon_rxd2 = null; 
                   String StrETHcon_rxd3 = null; String ActETHcon_rxd3 = null; String uriETHcon_rxd3 = null; 
                   String StrETHcon_rmii = null; String ActETHcon_rmii = null; String uriETHcon_rmii = null; 
                   String StrETHcon_crs_dv = null; String ActETHcon_crs_dv = null; String uriETHcon_crs_dv = null; 
                   String StrETHcon_crs = null; String ActETHcon_crs = null; String uriETHcon_crs = null; 
                   String StrETHcon_rxer = null; String ActETHcon_rxer = null; String uriETHcon_rxer = null; 
                   String StrETHcon_col = null; String ActETHcon_col = null; String uriETHcon_col = null; 
                   String StrETHcon_clk_tx = null; String ActETHcon_clk_tx = null; String uriETHcon_clk_tx = null; 
                   String StrETHcon_mdio = null; String ActETHcon_mdio = null; String uriETHcon_mdio = null; 
                   String StrETHcon_infsel = null; String ActETHcon_infsel = null; String uriETHcon_infsel = null;                    

                      uriETHcon_rxd0 = uriStr_ETH +"con_rxd0";
                      StrResetETH = app.getResetValue(uriETHcon_rxd0);
                   ActETHcon_rxd0 = app.getMuxValue(uriETHcon_rxd0);                   
                    if(StrResetETH.compareTo(ActETHcon_rxd0) < 0) 
                    {
                      StrETHcon_rxd0 = "WR_REG(ETH0_CON->CON, ETH_CON_RXD0_Msk, ETH_CON_RXD0_Pos, ETH_RXDx" + (char)(Integer.parseInt(ActETHcon_rxd0.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_rxd1 = uriStr_ETH +"con_rxd1";
                      StrResetETH = app.getResetValue(uriETHcon_rxd1);
                   ActETHcon_rxd1 = app.getMuxValue(uriETHcon_rxd1);                   
                    if(StrResetETH.compareTo(ActETHcon_rxd1) < 0) 
                    {
                      StrETHcon_rxd1 = "WR_REG(ETH0_CON->CON, ETH_CON_RXD1_Msk, ETH_CON_RXD1_Pos, ETH_RXDx" + (char)(Integer.parseInt(ActETHcon_rxd1.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_rxd2 = uriStr_ETH +"con_rxd2";
                      StrResetETH = app.getResetValue(uriETHcon_rxd2);
                   ActETHcon_rxd2 = app.getMuxValue(uriETHcon_rxd2);                   
                    if(StrResetETH.compareTo(ActETHcon_rxd2) < 0) 
                    {
                      StrETHcon_rxd2 = "WR_REG(ETH0_CON->CON, ETH_CON_RXD2_Msk, ETH_CON_RXD2_Pos, ETH_RXDx" + (char)(Integer.parseInt(ActETHcon_rxd2.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_rxd3 = uriStr_ETH +"con_rxd3";
                      StrResetETH = app.getResetValue(uriETHcon_rxd3);
                   ActETHcon_rxd3 = app.getMuxValue(uriETHcon_rxd3);                   
                    if(StrResetETH.compareTo(ActETHcon_rxd3) < 0) 
                    {
                      StrETHcon_rxd3 = "WR_REG(ETH0_CON->CON, ETH_CON_RXD3_Msk, ETH_CON_RXD3_Pos, ETH_RXDx" + (char)(Integer.parseInt(ActETHcon_rxd3.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_rmii = uriStr_ETH +"con_rmii";
                      StrResetETH = app.getResetValue(uriETHcon_rmii);
                   ActETHcon_rmii = app.getMuxValue(uriETHcon_rmii);                   
                    if(StrResetETH.compareTo(ActETHcon_rmii) < 0) 
                    {
                      StrETHcon_rmii = "WR_REG(ETH0_CON->CON, ETH_CON_CLK_RMII_Msk, ETH_CON_CLK_RMII_Pos, ETH_RMII" + (char)(Integer.parseInt(ActETHcon_rmii.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_crs_dv = uriStr_ETH +"con_crs_dv";
                      StrResetETH = app.getResetValue(uriETHcon_crs_dv);
                   ActETHcon_crs_dv = app.getMuxValue(uriETHcon_crs_dv);                   
                    if(StrResetETH.compareTo(ActETHcon_crs_dv) < 0) 
                    {
                      StrETHcon_crs_dv = "WR_REG(ETH0_CON->CON, ETH_CON_CRS_DV_Msk, ETH_CON_CRS_DV_Pos, ETH_CRS_DV" + (char)(Integer.parseInt(ActETHcon_crs_dv.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_crs = uriStr_ETH +"con_crs";
                      StrResetETH = app.getResetValue(uriETHcon_crs);
                   ActETHcon_crs = app.getMuxValue(uriETHcon_crs);                   
                    if(StrResetETH.compareTo(ActETHcon_crs) < 0) 
                    {
                      StrETHcon_crs = "WR_REG(ETH0_CON->CON, ETH_CON_CRS_Msk, ETH_CON_CRS_Pos, ETH_CRS" + (char)(Integer.parseInt(ActETHcon_crs.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_rxer = uriStr_ETH +"con_rxer";
                      StrResetETH = app.getResetValue(uriETHcon_rxer);
                   ActETHcon_rxer = app.getMuxValue(uriETHcon_rxer);                   
                    if(StrResetETH.compareTo(ActETHcon_rxer) < 0) 
                    {
                      StrETHcon_rxer = "WR_REG(ETH0_CON->CON, ETH_CON_RXER_Msk, ETH_CON_RXER_Pos, ETH_RXER" + (char)(Integer.parseInt(ActETHcon_rxer.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_col = uriStr_ETH +"con_col";
                      StrResetETH = app.getResetValue(uriETHcon_col);
                   ActETHcon_col = app.getMuxValue(uriETHcon_col);                   
                    if(StrResetETH.compareTo(ActETHcon_col) < 0) {
                      StrETHcon_col = "WR_REG(ETH0_CON->CON, ETH_CON_COL_Msk, ETH_CON_COL_Pos, ETH_COL" + (char)(Integer.parseInt(ActETHcon_col.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_clk_tx = uriStr_ETH +"con_clk_tx";
                      StrResetETH = app.getResetValue(uriETHcon_clk_tx);
                   ActETHcon_clk_tx = app.getMuxValue(uriETHcon_clk_tx);                   
                    if(StrResetETH.compareTo(ActETHcon_clk_tx) < 0) 
                    {
                      StrETHcon_clk_tx = "WR_REG(ETH0_CON->CON, ETH_CON_CLK_TX_Msk, ETH_CON_CLK_TX_Pos, ETH_CLK_TX" + (char)(Integer.parseInt(ActETHcon_clk_tx.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_mdio = uriStr_ETH +"con_mdio";
                      StrResetETH = app.getResetValue(uriETHcon_mdio);
                   ActETHcon_mdio = app.getMuxValue(uriETHcon_mdio);                   
                    if(StrResetETH.compareTo(ActETHcon_mdio) < 0) 
                    {
                      StrETHcon_mdio = "WR_REG(ETH0_CON->CON, ETH_CON_MDIO_Msk, ETH_CON_MDIO_Pos, ETH_MDIO" + (char)(Integer.parseInt(ActETHcon_mdio.trim()) + 65) + ");"; 
                      } 
                      uriETHcon_infsel = uriStr_ETH +"con_infsel";
                      StrResetETH = app.getResetValue(uriETHcon_infsel);
                   ActETHcon_infsel = app.getMuxValue(uriETHcon_infsel);                   
                    if(StrResetETH.compareTo(ActETHcon_infsel) < 0) 
                    {
                      StrETHcon_infsel = "WR_REG(ETH0_CON->CON, ETH_CON_INFSEL_Msk, ETH_CON_INFSEL_Pos," + ActETHcon_infsel + ");"; 
                      }                       
                    if((StrETHcon_rxd0 != null)|(StrETHcon_rxd1 != null)|(StrETHcon_rxd2 != null)|(StrETHcon_rxd3 != null)
                     |(StrETHcon_rmii != null)|(StrETHcon_crs_dv != null)|(StrETHcon_crs != null)|(StrETHcon_rxer != null)
                     |(StrETHcon_col != null)|(StrETHcon_clk_tx != null)|(StrETHcon_mdio != null)|(StrETHcon_infsel != null)){%>
                     
    // Configuring ETH0_CON  =  Ethernet x Port Control Register
                     <% if(StrETHcon_rxd0 != null){%>

    <%= StrETHcon_rxd0%>                   
                       <% } if(StrETHcon_rxd1 != null){%>

    <%= StrETHcon_rxd1%>                   
                       <% } if(StrETHcon_rxd2 != null){%>

    <%= StrETHcon_rxd2%>                   
                       <% } if(StrETHcon_rxd3 != null){%>

    <%= StrETHcon_rxd3%>                   
                       <% } if(StrETHcon_rmii != null){%>

    <%= StrETHcon_rmii%>                   
                       <% } if(StrETHcon_crs_dv != null){%>

    <%= StrETHcon_crs_dv%>                   
                       <% } if(StrETHcon_crs != null){%>

    <%= StrETHcon_crs%>                   
                       <% } if(StrETHcon_rxer != null){%>

    <%= StrETHcon_rxer%>                   
                       <% } if(StrETHcon_col != null){%>

    <%= StrETHcon_col%>                   
                       <% } if(StrETHcon_clk_tx != null){%>

    <%= StrETHcon_clk_tx%>                   
                       <% } if(StrETHcon_mdio != null){%>

    <%= StrETHcon_mdio%>                   
                       <% } if(StrETHcon_infsel != null){%>

    <%= StrETHcon_infsel%>                   
                       <% } 
                   }                   
      } 
      //********* Ethernet MAC CONFIGURATIONS ---  END ************************* 
      %>
    <%       
     //********* Delta-Sigma Demodulator (DSD) --- BEGIN ************************* 
     if(MyTempPeriName.compareTo("peripheral/dsd") == 0) {
         String uriStr_DSD = "peripheral/dsd/0/Channel/"; 
        //********* Delta-Sigma Demodulator (DSD) CONFIGURATIONS ************************* 
         for (int Ch = 0; Ch < 4; Ch++) { 
               String uriStr_xReg = null; 
			   String StrTempDSDReset = null;
			   String StrTempDSDActualX = null;
			   String temp_dicfg_dsrc = null;
			   String temp_dicfg_dsrc_sel = null;
			   String temp_dicfg_csrc = null;
			   String temp_dicfg_scwc = null;
			   String temp_dicfg_trsel = null;
			   String temp_dicfg_trwc = null;
			   String temp_DIN = null;			   
               uriStr_xReg = uriStr_DSD + Integer.toString(Ch) + "/dicfg_dsrcsel";
               StrTempDSDReset = app.getResetValue(uriStr_xReg);
               StrTempDSDActualX = app.getMuxValue(uriStr_xReg);                   
               if(StrTempDSDReset.compareTo(StrTempDSDActualX) < 0) { 
	              if(StrTempDSDActualX.equals("1")) {
	               	temp_DIN = "A";
               		}
	              else if(StrTempDSDActualX.equals("2")) {
	               	temp_DIN = "B";
	                }               
temp_dicfg_dsrc_sel = "WR_REG(DSD_CH"+ Integer.toString(Ch) +"->DICFG, DSD_CH_DICFG_DSWC_DSRCSEL_Msk, DSD_CH_DICFG_DSRC_Pos, \\\n     ((((DSD_CH"+ Integer.toString(Ch) +"->DICFG) & DSD_CH_DICFG_DSRC_Msk) | (DSD_CH_DICFG_DSWC_Msk | (DINx" + temp_DIN + ")<<1))));";
               } 
               uriStr_xReg = uriStr_DSD + Integer.toString(Ch) + "/dicfg_csrc";
               StrTempDSDReset = app.getResetValue(uriStr_xReg);
               StrTempDSDActualX = app.getMuxValue(uriStr_xReg);                   
               if(StrTempDSDReset.compareTo(StrTempDSDActualX) < 0) { 
	              if(StrTempDSDActualX.equals("1")) {
	               	temp_DIN = "A";
               		}
	              else if(StrTempDSDActualX.equals("2")) {
	               	temp_DIN = "B";
	                }               
	              else if(StrTempDSDActualX.equals("15")) {
	               	temp_DIN = "INTERNAL";
	                }       
temp_dicfg_csrc = "WR_REG(DSD_CH"+ Integer.toString(Ch) +"->DICFG, DSD_CH_DICFG_SCWC_STROBE_CSRC_Msk, DSD_CH_DICFG_CSRC_Pos, \\\n     (((((DSD_CH"+ Integer.toString(Ch) +"->DICFG) & DSD_CH_DICFG_STROBE_Msk) | DSD_CH_DICFG_SCWC_Msk) >> DSD_CH_DICFG_CSRC_Pos) | MCLKx" + temp_DIN + "));";               
               } 
               uriStr_xReg = uriStr_DSD + Integer.toString(Ch) + "/dicfg_trsel";
               StrTempDSDReset = app.getResetValue(uriStr_xReg);
               StrTempDSDActualX = app.getMuxValue(uriStr_xReg);                   
               if(StrTempDSDReset.compareTo(StrTempDSDActualX) < 0){ 
  temp_dicfg_trsel = "WR_REG(DSD_CH"+ Integer.toString(Ch) +"->DICFG, DSD_CH_DICFG_TRWC_TRSEL_Msk, DSD_CH_DICFG_ITRMODE_Pos, \\\n     ((((DSD_CH"+ Integer.toString(Ch) +"->DICFG) & (DSD_CH_DICFG_ITRMODE_Msk|DSD_CH_DICFG_TSTRMODE_Msk))| \\\n     (DSD_CH_DICFG_TRWC_Msk) | (ITRx" + (char)(Integer.parseInt(StrTempDSDActualX.trim()) + 65)  + "  << DSD_CH_DICFG_TRSEL_Pos)) >> DSD_CH_DICFG_ITRMODE_Pos));";

               } %>
               
    <% if((temp_dicfg_dsrc_sel != null) | (temp_dicfg_csrc != null) | (temp_dicfg_trsel != null) ){%>
                          
    // Demodulator Input Configuration Register <%=Ch%>
        <% if(temp_dicfg_dsrc_sel != null){%>        

    <%=temp_dicfg_dsrc_sel%>
        <% } %>
        <% if(temp_dicfg_csrc != null){%>

	<%= temp_dicfg_csrc%>  
        <% } %>
        <% if(temp_dicfg_trsel != null){%>
        
	<%= temp_dicfg_trsel%>                   
        <% } %>
    <% } %>
<%             uriStr_xReg = uriStr_DSD + Integer.toString(Ch) + "/rectcfg_ssrc";
               StrTempDSDReset = app.getResetValue(uriStr_xReg);
               StrTempDSDActualX = app.getMuxValue(uriStr_xReg);                   
               if(StrTempDSDReset.compareTo(StrTempDSDActualX) < 0) { %>
               
    // Rectification Configuration Register <%=Ch%>              
    WR_REG(DSD_CH<%=Ch%>->RECTCFG, DSD_CH_RECTCFG_SSRC_Msk, DSD_CH_RECTCFG_SSRC_Pos, <%=StrTempDSDActualX%>);                
<%              } 
         }             
     } 
       //********* Delta-Sigma Demodulator (DSD) CONFIGURATIONS ---  END ************************* 
       %>
    <%
     //********* Multi CAN CONFIGURATIONS --- BEGIN *************************
    if(MyTempPeriName.compareTo("peripheral/can") == 0) {%>
/*
 * CAN peripheral configuration:
 */         
<% String CANuri = null;%>
<% String NODExTypedef = null; %>
<% String MOxTypedef = null; %>
<% String RstCANuriMuxVal = null; %>
<% String ActCANuriMuxVal = null; %>
<% for (int NodeNr=0; NodeNr<=2; NodeNr++) { %>
<% CANuri = "peripheral/can/0/node/" + NodeNr + "/npcr_rxsel"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (NODExTypedef != "Defined") { %>
    //Node<%= NodeNr%> configuration:    
  <% NODExTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_NODE<%= NodeNr%>->NCR, CAN_NODE_NCR_CCE_Msk, CAN_NODE_NCR_CCE_Pos, 1); // Configuration Change Enable = 1
    WR_REG(CAN_NODE<%= NodeNr%>->NPCR, CAN_NODE_NPCR_RXSEL_Msk, CAN_NODE_NPCR_RXSEL_Pos, RXD_SIGNAL<%= app.getMuxValue(CANuri) %>);
    
<% } %>
<% CANuri = "peripheral/can/0/node/" + NodeNr + "/nipr_trinp"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (NODExTypedef != "Defined") { %>
    //Node<%= NodeNr%> configuration:
    
  <% NODExTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_NODE<%= NodeNr%>->NIPR, CAN_NODE_NIPR_TRINP_Msk, CAN_NODE_NIPR_TRINP_Pos, SRN<%= app.getMuxValue(CANuri) %>);
    
<% } %>
<% CANuri = "peripheral/can/0/node/" + NodeNr + "/nipr_lecinp"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (NODExTypedef != "Defined") { %>
    //Node<%= NodeNr%> configuration:
    
  <% NODExTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_NODE<%= NodeNr%>->NIPR, CAN_NODE_NIPR_LECINP_Msk, CAN_NODE_NIPR_LECINP_Pos, SRN<%= app.getMuxValue(CANuri) %>);
    
<% } %>
<% CANuri = "peripheral/can/0/node/" + NodeNr + "/nipr_alinp"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (NODExTypedef != "Defined") { %>
    //Node<%= NodeNr%> configuration:
    
  <% NODExTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_NODE<%= NodeNr%>->NIPR, CAN_NODE_NIPR_ALINP_Msk, CAN_NODE_NIPR_ALINP_Pos, SRN<%= app.getMuxValue(CANuri) %>);
    
<% } %>
<% CANuri = "peripheral/can/0/node/" + NodeNr + "/nipr_cfcinp"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (NODExTypedef != "Defined") { %>
    //Node<%= NodeNr%> configuration:
    
  <% NODExTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_NODE<%= NodeNr%>->NIPR, CAN_NODE_NIPR_CFCINP_Msk, CAN_NODE_NIPR_CFCINP_Pos, SRN<%= app.getMuxValue(CANuri) %>);
    
<% } %>
<% NODExTypedef = null; %>
<% } %>
<% for (int MONr=0; MONr<=63; MONr++) { %>
<% CANuri = "peripheral/can/0/mo/" + MONr + "/moipr_txinp"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (MOxTypedef != "Defined") { %>
    //Message objest <%= MONr%> configuration:
    
  <% MOxTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_MO<%= MONr%>->MOIPR, CAN_MO_MOIPR_TXINP_Msk, CAN_MO_MOIPR_TXINP_Pos, SRN<%= app.getMuxValue(CANuri) %>);    
<% } %>
<% CANuri = "peripheral/can/0/mo/" + MONr + "/moipr_rxinp"; %>
<% RstCANuriMuxVal = app.getResetValue(CANuri); %> 
<% ActCANuriMuxVal = app.getMuxValue(CANuri); %>
<% if((ActCANuriMuxVal.compareTo(RstCANuriMuxVal) != 0) && (ActCANuriMuxVal.compareTo("") != 0)) { %>            
  <% if (MOxTypedef != "Defined") { %>
    //Message objest <%= MONr%> configuration:
    
  <% MOxTypedef = "Defined"; %>
  <% } %>
    WR_REG(CAN_MO<%= MONr%>->MOIPR, CAN_MO_MOIPR_RXINP_Msk, CAN_MO_MOIPR_RXINP_Pos, SRN<%= app.getMuxValue(CANuri) %>);
    
<% } %>
<% MOxTypedef = null; %>
<% } %>
    <% } 
     //********* Multi CAN CONFIGURATIONS ---  END ************************* %>
    <% //********* POSIF CONFIGURATIONS --- BEGIN ************************* 
    if(MyTempPeriName.compareTo("peripheral/posif") == 0) {%>
/*
 * POSIF0 peripheral configuration:
 */         
<% String POSIF0uri = null;%>
<% String POSIF0Typedef = null; %>
<% String RstPOSIF0uriMuxVal = null; %>
<% String ActPOSIF0uriMuxVal = null; %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_insel0"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_INSEL0_Msk, POSIF_PCONF_INSEL0_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_insel1"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_INSEL1_Msk, POSIF_PCONF_INSEL1_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_insel2"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_INSEL2_Msk, POSIF_PCONF_INSEL2_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_dsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_DSEL_Msk, POSIF_PCONF_DSEL_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_ewis"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_EWIS_Msk, POSIF_PCONF_EWIS_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_msets"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_MSETS_Msk, POSIF_PCONF_MSETS_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pconf_msyns"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PCONF, POSIF_PCONF_MSYNS_Msk, POSIF_PCONF_MSYNS_Pos, INSIGNAL<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_eche"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_ECHE_Msk, POSIF_PFLGE_ECHE_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_chesel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_CHESEL_Msk, POSIF_PFLGE_CHESEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_ewhe"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EWHE_Msk, POSIF_PFLGE_EWHE_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_whesel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_WHESEL_Msk, POSIF_PFLGE_WHESEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_ehie"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EHIE_Msk, POSIF_PFLGE_EHIE_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_hiesel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_HIESEL_Msk, POSIF_PFLGE_HIESEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_emst"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EMST_Msk, POSIF_PFLGE_EMST_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_mstsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_MSTSEL_Msk, POSIF_PFLGE_MSTSEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_eindx"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EINDX_Msk, POSIF_PFLGE_EINDX_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_indsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_INDSEL_Msk, POSIF_PFLGE_INDSEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_eerr"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EERR_Msk, POSIF_PFLGE_EERR_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_errsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_ERRSEL_Msk, POSIF_PFLGE_ERRSEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_ecnt"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_ECNT_Msk, POSIF_PFLGE_ECNT_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_cntsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_CNTSEL_Msk, POSIF_PFLGE_CNTSEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_edir"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EDIR_Msk, POSIF_PFLGE_EDIR_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_dirsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_DIRSEL_Msk, POSIF_PFLGE_DIRSEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_epclk"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_EPCLK_Msk, POSIF_PFLGE_EPCLK_Pos, SET_<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0uri = "peripheral/Posif/0/Posif/pflge_pclsel"; %>
<% RstPOSIF0uriMuxVal = app.getResetValue(POSIF0uri); %> 
<% ActPOSIF0uriMuxVal = app.getMuxValue(POSIF0uri); %>
<% if((ActPOSIF0uriMuxVal.compareTo(RstPOSIF0uriMuxVal) != 0) && (ActPOSIF0uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF0Typedef != "Defined") { %>
    //POSIF0 configuration:
    
  <% POSIF0Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF0->PFLGE, POSIF_PFLGE_PCLSEL_Msk, POSIF_PFLGE_PCLSEL_Pos, SR<%= app.getMuxValue(POSIF0uri) %>);
    
<% } %>
<% POSIF0Typedef = null; %>

/*
 * POSIF1 peripheral configuration:
 */         
<% String POSIF1uri = null;%>
<% String POSIF1Typedef = null; %>
<% String RstPOSIF1uriMuxVal = null; %>
<% String ActPOSIF1uriMuxVal = null; %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_insel0"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_INSEL0_Msk, POSIF_PCONF_INSEL0_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_insel1"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_INSEL1_Msk, POSIF_PCONF_INSEL1_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_insel2"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_INSEL2_Msk, POSIF_PCONF_INSEL2_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_dsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_DSEL_Msk, POSIF_PCONF_DSEL_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_ewis"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_EWIS_Msk, POSIF_PCONF_EWIS_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_msets"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_MSETS_Msk, POSIF_PCONF_MSETS_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pconf_msyns"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PCONF, POSIF_PCONF_MSYNS_Msk, POSIF_PCONF_MSYNS_Pos, INSIGNAL<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_eche"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_ECHE_Msk, POSIF_PFLGE_ECHE_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_chesel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_CHESEL_Msk, POSIF_PFLGE_CHESEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_ewhe"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EWHE_Msk, POSIF_PFLGE_EWHE_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_whesel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_WHESEL_Msk, POSIF_PFLGE_WHESEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_ehie"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EHIE_Msk, POSIF_PFLGE_EHIE_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_hiesel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_HIESEL_Msk, POSIF_PFLGE_HIESEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_emst"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EMST_Msk, POSIF_PFLGE_EMST_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_mstsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_MSTSEL_Msk, POSIF_PFLGE_MSTSEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_eindx"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EINDX_Msk, POSIF_PFLGE_EINDX_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_indsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_INDSEL_Msk, POSIF_PFLGE_INDSEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_eerr"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EERR_Msk, POSIF_PFLGE_EERR_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_errsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_ERRSEL_Msk, POSIF_PFLGE_ERRSEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_ecnt"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_ECNT_Msk, POSIF_PFLGE_ECNT_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_cntsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_CNTSEL_Msk, POSIF_PFLGE_CNTSEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_edir"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EDIR_Msk, POSIF_PFLGE_EDIR_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_dirsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_DIRSEL_Msk, POSIF_PFLGE_DIRSEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_epclk"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_EPCLK_Msk, POSIF_PFLGE_EPCLK_Pos, SET_<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1uri = "peripheral/Posif/1/Posif/pflge_pclsel"; %>
<% RstPOSIF1uriMuxVal = app.getResetValue(POSIF1uri); %> 
<% ActPOSIF1uriMuxVal = app.getMuxValue(POSIF1uri); %>
<% if((ActPOSIF1uriMuxVal.compareTo(RstPOSIF1uriMuxVal) != 0) && (ActPOSIF1uriMuxVal.compareTo("") != 0)) { %>            
  <% if (POSIF1Typedef != "Defined") { %>
    //POSIF1 configuration:
    
  <% POSIF1Typedef = "Defined"; %>
  <% } %>
    WR_REG(POSIF1->PFLGE, POSIF_PFLGE_PCLSEL_Msk, POSIF_PFLGE_PCLSEL_Pos, SR<%= app.getMuxValue(POSIF1uri) %>);
    
<% } %>
<% POSIF1Typedef = null; %>
    <% } 
     //********* POSIF CONFIGURATIONS ---  END ************************* %>
<% //********* MODULE USIC CONFIGURATIONS BEGIN ************************* %>    
<%if(MyTempPeriName.compareTo("peripheral/usic") == 0) {%>  
//********* MODULE USIC CONFIGURATIONS *************************	        
   <% int UsicNum = 3; 
   int UsicChannel = 2;
   String UsicBaseuri = "peripheral/usic/";
   String UsicSfruri = "";%>
   <% for (int k=0; k< UsicNum; k++) { %>
   <% for (int l=0; l< UsicChannel; l++) { %> 						
   /*USIC <%=k%> Channel <%=l%> Mux Related SFR/Bitfields Configurations*/ 						
   <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/dx0cr_dsel" ;	      
      String rstDX0CR_DSEL = app.getResetValue(UsicSfruri); 
      String actDX0CR_DSEL = app.getMuxValue(UsicSfruri); 
      if((actDX0CR_DSEL.compareTo(rstDX0CR_DSEL) != 0) && (actDX0CR_DSEL.compareTo("") != 0)) { %>         
 WR_REG(USIC<%=k%>_CH<%=l%>->DX0CR, USIC_CH_DX0CR_DSEL_Msk, USIC_CH_DX0CR_DSEL_Pos,<%=actDX0CR_DSEL%>); 
  
      <% } %>			 
  <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/dx1cr_dsel" ;  
     String rstDX1CR_DSEL = app.getResetValue(UsicSfruri); 
     String actDX1CR_DSEL = app.getMuxValue(UsicSfruri);         
     if((actDX1CR_DSEL.compareTo(rstDX1CR_DSEL) != 0) && (actDX1CR_DSEL.compareTo("") != 0)) { %>                 
 WR_REG(USIC<%=k%>_CH<%=l%>->DX1CR, USIC_CH_DX1CR_DSEL_Msk, USIC_CH_DX1CR_DSEL_Pos,<%=actDX1CR_DSEL%>);  
 
    <% } %> 					 
  <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/dx2cr_dsel" ;  
     String rstDX2CR_DSEL = app.getResetValue(UsicSfruri); 
     String actDX2CR_DSEL = app.getMuxValue(UsicSfruri);                
     if((actDX2CR_DSEL.compareTo(rstDX2CR_DSEL) != 0) && (actDX2CR_DSEL.compareTo("") != 0)) { %>   
 WR_REG(USIC<%=k%>_CH<%=l%>->DX2CR, USIC_CH_DX2CR_DSEL_Msk, USIC_CH_DX2CR_DSEL_Pos,<%=actDX2CR_DSEL%>);  
 
     <% } %>				
  <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/dx3cr_dsel" ;  
     String rstDX3CR_DSEL = app.getResetValue(UsicSfruri); 
     String actDX3CR_DSEL = app.getMuxValue(UsicSfruri);                
     if((actDX3CR_DSEL.compareTo(rstDX3CR_DSEL) != 0) && (actDX3CR_DSEL.compareTo("") != 0)) { %>   
 WR_REG(USIC<%=k%>_CH<%=l%>->DX3CR, USIC_CH_DX3CR_DSEL_Msk, USIC_CH_DX3CR_DSEL_Pos,<%=actDX3CR_DSEL%>);
   
     <% } %> 				
  <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/dx4cr_dsel" ;  
     String rstDX4CR_DSEL = app.getResetValue(UsicSfruri); 
     String actDX4CR_DSEL = app.getMuxValue(UsicSfruri);               
     if((actDX4CR_DSEL.compareTo(rstDX4CR_DSEL) != 0) && (actDX4CR_DSEL.compareTo("") != 0)) { %>   
 WR_REG(USIC<%=k%>_CH<%=l%>->DX4CR, USIC_CH_DX4CR_DSEL_Msk, USIC_CH_DX4CR_DSEL_Pos,<%=actDX4CR_DSEL%>); 
  
     <% } %> 		      
  <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/dx5cr_dsel" ; 
     String rstDX5CR_DSEL = app.getResetValue(UsicSfruri); 
     String actDX5CR_DSEL = app.getMuxValue(UsicSfruri);                
     if((actDX5CR_DSEL.compareTo(rstDX5CR_DSEL) != 0) && (actDX5CR_DSEL.compareTo("") != 0)) { %>   
 WR_REG(USIC<%=k%>_CH<%=l%>->DX5CR, USIC_CH_DX5CR_DSEL_Msk, USIC_CH_DX5CR_DSEL_Pos,<%=actDX5CR_DSEL%>);  
 
     <% } %> 				             
  <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_hpcen" ; 
     String rstCCR_HPCEN = app.getResetValue(UsicSfruri);
     String actCCR_HPCEN = app.getMuxValue(UsicSfruri);               
     if((actCCR_HPCEN.compareTo(rstCCR_HPCEN) != 0) && (actCCR_HPCEN.compareTo("") != 0)) { %>   
 //Hardware port control is enabled.                 
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_HPCEN_Msk, USIC_CH_CCR_HPCEN_Pos,<%=actCCR_HPCEN%>);
   
     <% } %> 				 
 <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_tsien" ; 
    String rstCCR_TSIEN = app.getResetValue(UsicSfruri);
    String actCCR_TSIEN = app.getMuxValue(UsicSfruri);               
    if((actCCR_TSIEN.compareTo(rstCCR_TSIEN) != 0) && (actCCR_TSIEN.compareTo("") != 0)) { %>   
 //Transmit shift event event is enabled.                
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_TSIEN_Msk, USIC_CH_CCR_TSIEN_Pos,<%=actCCR_TSIEN%>);  
 
    <% } %> 					   
 <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_tbien" ; 
    String rstCCR_TBIEN = app.getResetValue(UsicSfruri); 
    String actCCR_TBIEN = app.getMuxValue(UsicSfruri);              
    if((actCCR_TBIEN.compareTo(rstCCR_TBIEN) != 0) && (actCCR_TBIEN.compareTo("") != 0)) { %>   
 //Transmit buffer event event is enabled.                       
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_TBIEN_Msk, USIC_CH_CCR_TBIEN_Pos,<%=actCCR_TBIEN%>);  
 
    <% } %> 					
 <% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_rsien" ; 
    String rstCCR_RSIEN = app.getResetValue(UsicSfruri); 
    String actCCR_RSIEN = app.getMuxValue(UsicSfruri);                
    if((actCCR_RSIEN.compareTo(rstCCR_RSIEN) != 0) && (actCCR_RSIEN.compareTo("") != 0)) { %>   
 //Receive start event event is enabled.                    
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_RSIEN_Msk, USIC_CH_CCR_RSIEN_Pos,<%=actCCR_RSIEN%>); 
  
    <% } %> 					   
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_rien" ;  
   String rstCCR_RIEN = app.getResetValue(UsicSfruri);  
   String actCCR_RIEN = app.getMuxValue(UsicSfruri);               
   if((actCCR_RIEN.compareTo(rstCCR_RIEN) != 0) && (actCCR_RIEN.compareTo("") != 0)) { %>   
 //Receive event event is enabled.                
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_RIEN_Msk, USIC_CH_CCR_RIEN_Pos,<%=actCCR_RIEN%>); 
  
   <% } %>				 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_aien" ;  
   String rstCCR_AIEN = app.getResetValue(UsicSfruri);  
   String actCCR_AIEN = app.getMuxValue(UsicSfruri);              
  if((actCCR_AIEN.compareTo(rstCCR_AIEN) != 0) && (actCCR_AIEN.compareTo("") != 0)) { %>   
 //Alternative receive event event is enabled.              
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_AIEN_Msk, USIC_CH_CCR_AIEN_Pos,<%=actCCR_AIEN%>);  
 
   <% } %> 					
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_dlien" ; 
   String rstCCR_DLIEN = app.getResetValue(UsicSfruri); 
   String actCCR_DLIEN = app.getMuxValue(UsicSfruri);                
   if((actCCR_DLIEN.compareTo(rstCCR_DLIEN) != 0) && (actCCR_DLIEN.compareTo("") != 0)) { %>   
 //Data lost event event is enabled.                 
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_DLIEN_Msk, USIC_CH_CCR_DLIEN_Pos,<%=actCCR_DLIEN%>); 
  
   <% } %> 				 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/ccr_brgien" ;  
   String rstCCR_BRGIEN = app.getResetValue(UsicSfruri); 
   String actCCR_BRGIEN = app.getMuxValue(UsicSfruri);               
  if((actCCR_BRGIEN.compareTo(rstCCR_BRGIEN) != 0) && (actCCR_BRGIEN.compareTo("") != 0)) { %>   
 //Baud rate generator event is enabled.                
 WR_REG(USIC<%=k%>_CH<%=l%>->CCR, USIC_CH_CCR_BRGIEN_Msk, USIC_CH_CCR_BRGIEN_Pos,<%=actCCR_BRGIEN%>);  
 
   <% } %>				      
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/tbctr_stbien" ;  
   String rstTBCTR_STBIEN = app.getResetValue(UsicSfruri); 
   String actTBCTR_STBIEN = app.getMuxValue(UsicSfruri);               
   if((actTBCTR_STBIEN.compareTo(rstTBCTR_STBIEN) != 0) && (actTBCTR_STBIEN.compareTo("") != 0)) { %>   
 //Standard transmit buffer event is enabled.                 
 WR_REG(USIC<%=k%>_CH<%=l%>->TBCTR, USIC_CH_TBCTR_STBIEN_Msk, USIC_CH_TBCTR_STBIEN_Pos,<%=actTBCTR_STBIEN%>);
   
   <% } %> 				 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/tbctr_tberien" ;  
   String rstTBCTR_TBERIEN = app.getResetValue(UsicSfruri);  
   String actTBCTR_TBERIEN = app.getMuxValue(UsicSfruri);               
  if((actTBCTR_TBERIEN.compareTo(rstTBCTR_TBERIEN) != 0) && (actTBCTR_TBERIEN.compareTo("") != 0)) { %>   
 //Transmit buffer error event is enabled.                   
 WR_REG(USIC<%=k%>_CH<%=l%>->TBCTR, USIC_CH_TBCTR_TBERIEN_Msk, USIC_CH_TBCTR_TBERIEN_Pos,<%=actTBCTR_TBERIEN%>);  
 
   <% } %> 					
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_srbien" ; 
   String rstRBCTR_SRBIEN = app.getResetValue(UsicSfruri);  
   String actRBCTR_SRBIEN = app.getMuxValue(UsicSfruri);               
   if((actRBCTR_SRBIEN.compareTo(rstRBCTR_SRBIEN) != 0) && (actRBCTR_SRBIEN.compareTo("") != 0)) { %>    
 //Standard receive buffer event is enabled.                 
 WR_REG(USIC<%=k%>_CH<%=l%>->RBCTR, USIC_CH_RBCTR_SRBIEN_Msk, USIC_CH_RBCTR_SRBIEN_Pos,<%=actRBCTR_SRBIEN%>);  
 
   <% } %>					 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_rberien" ;  
   String rstRBCTR_RBERIEN = app.getResetValue(UsicSfruri); 
   String actRBCTR_RBERIEN = app.getMuxValue(UsicSfruri);                
  if((actRBCTR_RBERIEN.compareTo(rstRBCTR_RBERIEN) != 0) && (actRBCTR_RBERIEN.compareTo("") != 0)) { %>   
 //Receive buffer error event is enabled.                 
 WR_REG(USIC<%=k%>_CH<%=l%>->RBCTR, USIC_CH_RBCTR_RBERIEN_Msk, USIC_CH_RBCTR_RBERIEN_Pos,<%=actRBCTR_RBERIEN%>); 
  
   <% } %>				
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_arbien" ; 
   String rstRBCTR_ARBIEN = app.getResetValue(UsicSfruri);  
   String actRBCTR_ARBIEN = app.getMuxValue(UsicSfruri);               
   if((actRBCTR_ARBIEN.compareTo(rstRBCTR_ARBIEN) != 0) && (actRBCTR_ARBIEN.compareTo("") != 0)) { %>   
 //Alternative receive buffer event is enabled.           
 WR_REG(USIC<%=k%>_CH<%=l%>->RBCTR, USIC_CH_RBCTR_ARBIEN_Msk, USIC_CH_RBCTR_ARBIEN_Pos,<%=actRBCTR_ARBIEN%>); 
  
   <% } %>					
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/inpr_tsinp" ;  
   String rstINPR_TSINP = app.getResetValue(UsicSfruri);  
   String actINPR_TSINP = app.getMuxValue(UsicSfruri); 
   if((actINPR_TSINP.compareTo(rstINPR_TSINP) != 0) && (actINPR_TSINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actINPR_TSINP%> is selected for Transmit shift event                
 WR_REG(USIC<%=k%>_CH<%=l%>->INPR, USIC_CH_INPR_TSINP_Msk, USIC_CH_INPR_TSINP_Pos,<%=actINPR_TSINP%>);  
 
   <% } %> 					 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/inpr_tbinp" ; 
   String rstINPR_TBINP = app.getResetValue(UsicSfruri); 
   String actINPR_TBINP = app.getMuxValue(UsicSfruri);                
   if((actINPR_TBINP.compareTo(rstINPR_TBINP) != 0) && (actINPR_TBINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actINPR_TBINP%> is selected for Transmit buffer event                 
 WR_REG(USIC<%=k%>_CH<%=l%>->INPR, USIC_CH_INPR_TBINP_Msk, USIC_CH_INPR_TBINP_Pos,<%=actINPR_TBINP%>);  
 
   <% } %>					 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/inpr_rinp" ; 
   String rstINPR_RINP = app.getResetValue(UsicSfruri);
   String actINPR_RINP = app.getMuxValue(UsicSfruri);               
   if((actINPR_RINP.compareTo(rstINPR_RINP) != 0) && (actINPR_RINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actINPR_RINP%> is selected for Receive event               
 WR_REG(USIC<%=k%>_CH<%=l%>->INPR, USIC_CH_INPR_RINP_Msk, USIC_CH_INPR_RINP_Pos,<%=actINPR_RINP%>);  
 
   <% } %> 				
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/inpr_ainp" ;  
   String rstINPR_AINP = app.getResetValue(UsicSfruri); 
   String actINPR_AINP = app.getMuxValue(UsicSfruri);                
  if((actINPR_AINP.compareTo(rstINPR_AINP) != 0) && (actINPR_AINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actINPR_AINP%> is selected for Alternative receive event              
 WR_REG(USIC<%=k%>_CH<%=l%>->INPR, USIC_CH_INPR_AINP_Msk, USIC_CH_INPR_AINP_Pos,<%=actINPR_AINP%>);  
 
   <% } %>					      
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/inpr_pinp" ;  
   String rstINPR_PINP = app.getResetValue(UsicSfruri); 
   String actINPR_PINP = app.getMuxValue(UsicSfruri);                
   if((actINPR_PINP.compareTo(rstINPR_PINP) != 0) && (actINPR_PINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actINPR_PINP%> is selected for Protocol specific event             
 WR_REG(USIC<%=k%>_CH<%=l%>->INPR, USIC_CH_INPR_PINP_Msk, USIC_CH_INPR_PINP_Pos,<%=actINPR_PINP%>);  
 
   <% } %>					             
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/tbctr_stbinp" ;
   String rstTBCTR_STBINP = app.getResetValue(UsicSfruri); 
   String actTBCTR_STBINP = app.getMuxValue(UsicSfruri);
   if((actTBCTR_STBINP.compareTo(rstTBCTR_STBINP) != 0) && (actTBCTR_STBINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actTBCTR_STBINP%> is selected for Standard transmit buffer event                
 WR_REG(USIC<%=k%>_CH<%=l%>->TBCTR, USIC_CH_TBCTR_STBINP_Msk, USIC_CH_TBCTR_STBINP_Pos,<%=actTBCTR_STBINP%>);
   
   <% } %> 					
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/tbctr_atbinp" ; 
   String rstTBCTR_ATBINP = app.getResetValue(UsicSfruri); 
   String actTBCTR_ATBINP = app.getMuxValue(UsicSfruri);             
   if((actTBCTR_ATBINP.compareTo(rstTBCTR_ATBINP) != 0) && (actTBCTR_ATBINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actTBCTR_ATBINP%> is selected for Alternative transmit buffer event                
 WR_REG(USIC<%=k%>_CH<%=l%>->TBCTR, USIC_CH_TBCTR_ATBINP_Msk, USIC_CH_TBCTR_ATBINP_Pos,<%=actTBCTR_ATBINP%>); 
  
   <% } %>  						    
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_srbinp" ; 
   String rstRBCTR_SRBINP = app.getResetValue(UsicSfruri); 
   String actRBCTR_SRBINP = app.getMuxValue(UsicSfruri);               
  if((actRBCTR_SRBINP.compareTo(rstRBCTR_SRBINP) != 0) && (actRBCTR_SRBINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actRBCTR_SRBINP%> is selected for Standard receive buffer event                 
 WR_REG(USIC<%=k%>_CH<%=l%>->RBCTR, USIC_CH_RBCTR_SRBINP_Msk, USIC_CH_RBCTR_SRBINP_Pos,<%=actRBCTR_SRBINP%>);  
 
   <% } %>					     
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_arbinp" ; 
   String rstRBCTR_ARBINP = app.getResetValue(UsicSfruri); 
   String actRBCTR_ARBINP = app.getMuxValue(UsicSfruri);              
   if((actRBCTR_ARBINP.compareTo(rstRBCTR_ARBINP) != 0) && (actRBCTR_ARBINP.compareTo("") != 0)) { %>   
 //Interrupt node <%=actRBCTR_ARBINP%> is selected for Alternative receive buffer event            
 WR_REG(USIC<%=k%>_CH<%=l%>->RBCTR, USIC_CH_RBCTR_ARBINP_Msk, USIC_CH_RBCTR_ARBINP_Pos,<%=actRBCTR_ARBINP%>);  
 
   <% } %> 

<%int txactdptr = 0;%>
<%int txactsize = 0;%> 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/tbctr_dptr" ; 
   String rst = app.getResetValue(UsicSfruri); 
   String act = app.getMuxValue(UsicSfruri);              
   if((act.compareTo(rst) != 0) && (act.compareTo("") != 0)) { %>    
     <%txactdptr = Integer.parseInt(act);%>   
   <% } %> 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/tbctr_size" ; 
   rst = app.getResetValue(UsicSfruri); 
   act = app.getMuxValue(UsicSfruri);              
   if((act.compareTo(rst) != 0) && (act.compareTo("") != 0)) { %>    
    <%txactsize = Integer.parseInt(act);%>
<% } %> 
<% if((txactdptr != 0) || (txactsize != 0)) { %>  
 <%int txactdptrsize = (txactdptr + (txactsize << 24));%> 
   // Data Pointer & Buffer Size for Transmitter Buffer Control  
 WR_REG(USIC<%=k%>_CH<%=l%>->TBCTR, USIC_CH_TBCTR_DPTRSIZE_Msk, USIC_CH_TBCTR_DPTRSIZE_Pos,0x0<%= Integer.toHexString(txactdptrsize)%>);		/*    DPTR = <%=txactdptr%>,  SIZE = <%=txactsize%> */ 

<% } %>
<%int rxactdptr = 0;%>
<%int rxactsize = 0;%> 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_dptr" ; 
   rst = app.getResetValue(UsicSfruri); 
   act = app.getMuxValue(UsicSfruri);              
   if((act.compareTo(rst) != 0) && (act.compareTo("") != 0)) { %> 
     <%rxactdptr = Integer.parseInt(act);%> 
   <% } %> 
<% UsicSfruri =  UsicBaseuri + k + "/channel/" + l + "/rbctr_size" ; 
   rst = app.getResetValue(UsicSfruri); 
   act = app.getMuxValue(UsicSfruri);              
  if((act.compareTo(rst) != 0) && (act.compareTo("") != 0)) { %>  
    <%rxactsize = Integer.parseInt(act);%> 
  <% } %> 
  <% if((rxactdptr != 0) || (rxactsize != 0)) { %>  
  <%int rxactdptrsize = (rxactdptr + (rxactsize << 24));%> 
  // Data Pointer & Buffer Size for Receiver Buffer Control  
 WR_REG(USIC<%=k%>_CH<%=l%>->RBCTR, USIC_CH_RBCTR_DPTRSIZE_Msk, USIC_CH_RBCTR_DPTRSIZE_Pos,0x0<%= Integer.toHexString(rxactdptrsize)%>);		/*    DPTR = <%=rxactdptr%>,  SIZE = <%=rxactsize%> */ 

  <% } %>
    <%} %>  
  <%} %> 	        					
<% } %>
<% //********* USIC CONFIGURATIONS ---  END ************************* %>
<% //********* MODULE DLR CONFIGURATIONS BEGIN ************************* %>       
<%if(MyTempPeriName.compareTo("peripheral/dlr") == 0) {%>	    
  //********* MODULE DLR CONFIGURATIONS *************************	     
<% int DlrChannel = 12;
   String DlrBaseuri = "";
   String DlrSfruri = "";
   int k = 0;
   DlrBaseuri = "peripheral/dlr/0";%> 
   <% for (int l=0; l< DlrChannel; l++) { %>
      <% if  (l < 8) { %>   
         <% k = 0;%>         
      <% } else {%> 
         <% k = 1;%>    
      <% } %>      				
  /*DLR Line <%=l%> Mux Related SFR/Bitfields Configurations*/     				
      <% DlrSfruri =  DlrBaseuri + "/ch/" + l + "/srsel_rs" ;  
         String rstSRSEL_RS = app.getResetValue(DlrSfruri); 
      	 String actSRSEL_RS = app.getMuxValue(DlrSfruri);    
         if((actSRSEL_RS.compareTo(rstSRSEL_RS) != 0) && (actSRSEL_RS.compareTo("") != 0)) { %>  
 WR_REG(DLR->SRSEL<%=k%>, DLR_SRSEL<%=k%>_RS<%=l%>_Msk, DLR_SRSEL<%=k%>_RS<%=l%>_Pos,<%=actSRSEL_RS%>); 

          <% } %>  
    <%} %> 	         
<% } %> 	         
<% //********* DLR CONFIGURATIONS ---  END ************************* %>
    
<% //********* MODULE DMA CONFIGURATIONS BEGIN ************************* %>           
<%if((MyTempPeriName.compareTo("peripheral/dma8") == 0) || (MyTempPeriName.compareTo("peripheral/dma4") == 0)) {%>  	          
  <% int DmaNum = 2;
      int DmaChannel = 12;					
      String DmaBaseuri = "";					
      String DmaSfruri = "";
      String Channel = "";
      String Dma = "dma8";%>
    <%if((MyTempPeriName.compareTo("peripheral/dma8") == 0)) {%>
       <% DmaNum = 0;%>
    <% } %> 
    <%if((MyTempPeriName.compareTo("peripheral/dma4") == 0)) {%>
       <% DmaNum = 1;%>
    <% } %> 
  //********* MODULE DMA<%=DmaNum%> CONFIGURATIONS ************************* 					
    <% for (int k=DmaNum; k<=DmaNum; k++) { %>					
    <% if  (k < 1) { %>   
    <% DmaChannel = 8;
    Dma = "dma8";
    DmaBaseuri = "peripheral/" + Dma + "/";%> 
   <% } else {%> 
   <% DmaChannel = 4;  
    Dma = "dma4";
    DmaBaseuri = "peripheral/" + Dma + "/";%> 
   <% } %> 
   <% for (int l=0; l< DmaChannel; l++) { %> 					       
   <% if ( (l < 2) && (k < 1)  ) { %>   
   <% Channel = "ch_adv";%>
   <% } else {%> 
   <% Channel = "ch";%>  
   <% } %> 
  /*DMA <%=k%> Channel <%=l%> Mux Related SFR/Bitfields Configurations*/

   <% int j = 0;%> 
	
  <% DmaSfruri =  DmaBaseuri + j + "/" + Channel + "/" + l + "/cfgl_hs_sel_src" ;  
  String rstCFGL_HS_SEL_SRC = app.getResetValue(DmaSfruri); 
  String actCFGL_HS_SEL_SRC = app.getMuxValue(DmaSfruri); %>
  <% if((actCFGL_HS_SEL_SRC.compareTo(rstCFGL_HS_SEL_SRC) != 0) && (actCFGL_HS_SEL_SRC.compareTo("") != 0)) { %>            
  WR_REG(GPDMA<%=k%>_CH<%=l%>->CFGL, GPDMA<%=k%>_CH_CFGL_HS_SEL_SRC_Msk, GPDMA<%=k%>_CH_CFGL_HS_SEL_SRC_Pos,<%=actCFGL_HS_SEL_SRC%>); 

  <% } %> 
  <% DmaSfruri =  DmaBaseuri + j + "/" + Channel + "/" + l + "/cfgl_hs_sel_dst" ;  
  String rstCFGL_HS_SEL_DST = app.getResetValue(DmaSfruri); 
  String actCFGL_HS_SEL_DST = app.getMuxValue(DmaSfruri); %> 
  <% if((actCFGL_HS_SEL_DST.compareTo(rstCFGL_HS_SEL_DST) != 0) && (actCFGL_HS_SEL_DST.compareTo("") != 0)) { %> 
  WR_REG(GPDMA<%=k%>_CH<%=l%>->CFGL, GPDMA<%=k%>_CH_CFGL_HS_SEL_DST_Msk, GPDMA<%=k%>_CH_CFGL_HS_SEL_DST_Pos,<%=actCFGL_HS_SEL_DST%>);

  <% } %>
  <% DmaSfruri =  DmaBaseuri + j + "/" + Channel + "/" + l + "/cfgh_src_per" ;  
  String rstCFGH_SRC_PER = app.getResetValue(DmaSfruri);
  String actCFGH_SRC_PER = app.getMuxValue(DmaSfruri); %> 
  <% if((actCFGH_SRC_PER.compareTo(rstCFGH_SRC_PER) != 0) && (actCFGH_SRC_PER.compareTo("") != 0)) { %>      
  WR_REG(GPDMA<%=k%>_CH<%=l%>->CFGH, GPDMA<%=k%>_CH_CFGH_SRC_PER_Msk, GPDMA<%=k%>_CH_CFGH_SRC_PER_Pos,<%=actCFGH_SRC_PER%>);

  <% } %>
  <% DmaSfruri =  DmaBaseuri + j + "/" + Channel + "/" + l + "/cfgh_dest_per" ; 
  String rstCFGH_DEST_PER = app.getResetValue(DmaSfruri); 
  String actCFGH_DEST_PER = app.getMuxValue(DmaSfruri); %> 
  <% if((actCFGH_DEST_PER.compareTo(rstCFGH_DEST_PER) != 0) && (actCFGH_DEST_PER.compareTo("") != 0)) { %>     
  WR_REG(GPDMA<%=k%>_CH<%=l%>->CFGH, GPDMA<%=k%>_CH_CFGH_DEST_PER_Msk, GPDMA<%=k%>_CH_CFGH_DEST_PER_Pos,<%=actCFGH_DEST_PER%>);

  <% } %> 
  <%} %>
  <%} %>  				  	
	     <% } %>    
    <% //********* DMA CONFIGURATIONS ---  END ************************* %>
<% //********* MODULE VADC CONFIGURATIONS BEGIN ************************* %>
     <%if(MyTempPeriName.compareTo("peripheral/vadc") == 0) {%>
            <% int VadcGroup = 4; 
               int VadcChannel = 8;
               String VadcBaseuri = "peripheral/vadc/";
               String VadcSfruri = "";%>               
               <% for (int k=0; k< VadcGroup; k++) { %>
                  /*VADC GROUP<%=k%> Mux Related SFR/Bitfields Configurations*/  
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/queue" + "/gqctrl0_xtsel";%>						      
                     <% String rstGQCTRL0_XTSEL = app.getResetValue(VadcSfruri);%> 
                     <% String actGQCTRL0_XTSEL = app.getMuxValue(VadcSfruri);%>                        
                     <% if((actGQCTRL0_XTSEL.compareTo(rstGQCTRL0_XTSEL) != 0) && (actGQCTRL0_XTSEL.compareTo("") != 0)) { %>        
  WR_REG(VADC_G<%=k%>->QCTRL0, VADC_G_QCTRL0_XTWC_XTSEL_Msk, VADC_G_QCTRL0_XTSEL_Pos, \
     (((((VADC_G<%=k%>->QCTRL0) & VADC_G_QCTRL0_XTMODE_Msk) | VADC_G_QCTRL0_XTWC_Msk) >> VADC_G_QCTRL0_XTSEL_Pos) | <%=actGQCTRL0_XTSEL%>));
   
                          <% } %>                    
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/scan" + "/gasctrl_xtsel";%>						      
                     <% String rstGASCTRL_XTSEL = app.getResetValue(VadcSfruri);%> 
                     <% String actGASCTRL_XTSEL = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGASCTRL_XTSEL.compareTo(rstGASCTRL_XTSEL) != 0) && (actGASCTRL_XTSEL.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->ASCTRL, VADC_G_ASCTRL_XTWC_XTSEL_Msk, VADC_G_ASCTRL_XTSEL_Pos, \
   (((((VADC_G<%=k%>->ASCTRL) & VADC_G_ASCTRL_XTMODE_Msk) | VADC_G_ASCTRL_XTWC_Msk) >> VADC_G_ASCTRL_XTSEL_Pos) | <%=actGASCTRL_XTSEL%>));
  
                          <% } %>
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/queue" + "/gqctrl0_gtsel";%>						      
                     <% String rstGQCTRL0_GTSEL = app.getResetValue(VadcSfruri);%> 
                     <% String actGQCTRL0_GTSEL = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGQCTRL0_GTSEL.compareTo(rstGQCTRL0_GTSEL) != 0) && (actGQCTRL0_GTSEL.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->QCTRL0, VADC_G_QCTRL0_GTWC_GTSEL_Msk, VADC_G_QCTRL0_GTSEL_Pos, \
   (((VADC_G_QCTRL0_GTWC_Msk) >> VADC_G_QCTRL0_GTSEL_Pos) | <%=actGQCTRL0_GTSEL%>)); 
   
                          <% } %>                
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/scan" + "/gasctrl_gtsel";%>						      
                     <% String rstGASCTRL_GTSEL = app.getResetValue(VadcSfruri);%> 
                     <% String actGASCTRL_GTSEL = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGASCTRL_GTSEL.compareTo(rstGASCTRL_GTSEL) != 0) && (actGASCTRL_GTSEL.compareTo("") != 0)) { %>   
  WR_REG(VADC_G<%=k%>->ASCTRL, VADC_G_ASCTRL_GTWC_GTSEL_Msk, VADC_G_ASCTRL_GTSEL_Pos, \
   (((VADC_G_ASCTRL_GTWC_Msk) >> VADC_G_ASCTRL_GTSEL_Pos) | <%=actGASCTRL_GTSEL%>));  
  
                          <% } %>                 
                 <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/queue" + "/gsevnp_sev0np";%>						      
                     <% String rstGSEVNP_SEV0NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGSEVNP_SEV0NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGSEVNP_SEV0NP.compareTo(rstGSEVNP_SEV0NP) != 0) && (actGSEVNP_SEV0NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->SEVNP, VADC_G_SEVNP_SEV0NP_Msk, VADC_G_SEVNP_SEV0NP_Pos,<%=actGSEVNP_SEV0NP%>);   
 
                          <% } %>
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/scan" + "/gsevnp_sev1np";%>						      
                     <% String rstGSEVNP_SEV1NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGSEVNP_SEV1NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGSEVNP_SEV1NP.compareTo(rstGSEVNP_SEV1NP) != 0) && (actGSEVNP_SEV1NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->SEVNP, VADC_G_SEVNP_SEV1NP_Msk, VADC_G_SEVNP_SEV1NP_Pos,<%=actGSEVNP_SEV1NP%>); 
   
                          <% } %>                          
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/sync" + "/gsynctr_stsel";%>						      
                     <% String rstGSYNCTR_STSEL = app.getResetValue(VadcSfruri);%> 
                     <% String actGSYNCTR_STSEL = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGSYNCTR_STSEL.compareTo(rstGSYNCTR_STSEL) != 0) && (actGSYNCTR_STSEL.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->SYNCTR, VADC_G_SYNCTR_STSEL_Msk, VADC_G_SYNCTR_STSEL_Pos,<%=actGSYNCTR_STSEL%>); 
   
                          <% } %> 
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/sync" + "/gsynctr_evalr1";%>						      
                     <% String rstGSYNCTR_EVALR1 = app.getResetValue(VadcSfruri);%> 
                     <% String actGSYNCTR_EVALR1 = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGSYNCTR_EVALR1.compareTo(rstGSYNCTR_EVALR1) != 0) && (actGSYNCTR_EVALR1.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->SYNCTR, VADC_G_SYNCTR_EVALR1_Msk, VADC_G_SYNCTR_EVALR1_Pos,<%=actGSYNCTR_EVALR1%>); 
   
                          <% } %> 
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/sync" + "/gsynctr_evalr2";%>						      
                     <% String rstGSYNCTR_EVALR2 = app.getResetValue(VadcSfruri);%> 
                     <% String actGSYNCTR_EVALR2 = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGSYNCTR_EVALR2.compareTo(rstGSYNCTR_EVALR2) != 0) && (actGSYNCTR_EVALR2.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->SYNCTR, VADC_G_SYNCTR_EVALR2_Msk, VADC_G_SYNCTR_EVALR2_Pos,<%=actGSYNCTR_EVALR2%>); 
   
                          <% } %> 
                    <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/sync" + "/gsynctr_evalr3";%>						      
                     <% String rstGSYNCTR_EVALR3 = app.getResetValue(VadcSfruri);%> 
                     <% String actGSYNCTR_EVALR3 = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGSYNCTR_EVALR3.compareTo(rstGSYNCTR_EVALR3) != 0) && (actGSYNCTR_EVALR3.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->SYNCTR, VADC_G_SYNCTR_EVALR3_Msk, VADC_G_SYNCTR_EVALR3_Pos,<%=actGSYNCTR_EVALR3%>); 
   
                          <% } %>                           
                    <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/0" + "/galias_alias0";%>						      
                     <% String rstGALIAS_ALIAS0 = app.getResetValue(VadcSfruri);%> 
                     <% String actGALIAS_ALIAS0 = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGALIAS_ALIAS0.compareTo(rstGALIAS_ALIAS0) != 0) && (actGALIAS_ALIAS0.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->ALIAS, VADC_G_ALIAS_ALIAS0_Msk, VADC_G_ALIAS_ALIAS0_Pos,<%=actGALIAS_ALIAS0%>); 
   
                          <% } %>
                   <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/1" + "/galias_alias1";%>						      
                     <% String rstGALIAS_ALIAS1 = app.getResetValue(VadcSfruri);%> 
                     <% String actGALIAS_ALIAS1 = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGALIAS_ALIAS1.compareTo(rstGALIAS_ALIAS1) != 0) && (actGALIAS_ALIAS1.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->ALIAS, VADC_G_ALIAS_ALIAS1_Msk, VADC_G_ALIAS_ALIAS1_Pos,<%=actGALIAS_ALIAS1%>); 
   
                          <% } %> 
   								 <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/0" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR0_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR0_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR0_RESREG.compareTo(rstGCHCTR0_RESREG) != 0) && (actGCHCTR0_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[0], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR0_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/1" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR1_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR1_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR1_RESREG.compareTo(rstGCHCTR1_RESREG) != 0) && (actGCHCTR1_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[1], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR1_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/2" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR2_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR2_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR2_RESREG.compareTo(rstGCHCTR2_RESREG) != 0) && (actGCHCTR2_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[2], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR2_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/3" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR3_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR3_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR3_RESREG.compareTo(rstGCHCTR3_RESREG) != 0) && (actGCHCTR3_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[3], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR3_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/4" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR4_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR4_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR4_RESREG.compareTo(rstGCHCTR4_RESREG) != 0) && (actGCHCTR4_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[4], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR4_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/5" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR5_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR5_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR5_RESREG.compareTo(rstGCHCTR5_RESREG) != 0) && (actGCHCTR5_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[5], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR5_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/6" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR6_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR6_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR6_RESREG.compareTo(rstGCHCTR6_RESREG) != 0) && (actGCHCTR6_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[6], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR6_RESREG%>); 
   
                          <% } %> 
                     <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/7" + "/gchctr_resreg";%>						      
                     <% String rstGCHCTR7_RESREG = app.getResetValue(VadcSfruri);%> 
                     <% String actGCHCTR7_RESREG = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCHCTR7_RESREG.compareTo(rstGCHCTR7_RESREG) != 0) && (actGCHCTR7_RESREG.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CHCTR[7], VADC_G_CHCTR_RESREG_Msk, VADC_G_CHCTR_RESREG_Pos,<%=actGCHCTR7_RESREG%>); 
   
                          <% } %>                                                                    
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/0" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV0NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV0NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV0NP.compareTo(rstGCEVNP0_CEV0NP) != 0) && (actGCEVNP0_CEV0NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV0NP_Msk, VADC_G_CEVNP0_CEV0NP_Pos,<%=actGCEVNP0_CEV0NP%>); 
   
                          <% } %>                   
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/1" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV1NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV1NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV1NP.compareTo(rstGCEVNP0_CEV1NP) != 0) && (actGCEVNP0_CEV1NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV1NP_Msk, VADC_G_CEVNP0_CEV1NP_Pos,<%=actGCEVNP0_CEV1NP%>); 
   
                          <% } %>                 
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/2" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV2NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV2NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV2NP.compareTo(rstGCEVNP0_CEV2NP) != 0) && (actGCEVNP0_CEV2NP.compareTo("") != 0)) { %>      
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV2NP_Msk, VADC_G_CEVNP0_CEV2NP_Pos,<%=actGCEVNP0_CEV2NP%>); 
   
                          <% } %>                   
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/3" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV3NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV3NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV3NP.compareTo(rstGCEVNP0_CEV3NP) != 0) && (actGCEVNP0_CEV3NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV3NP_Msk, VADC_G_CEVNP0_CEV3NP_Pos,<%=actGCEVNP0_CEV3NP%>); 
   
                          <% } %>                    
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/4" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV4NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV4NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV4NP.compareTo(rstGCEVNP0_CEV4NP) != 0) && (actGCEVNP0_CEV4NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV4NP_Msk, VADC_G_CEVNP0_CEV4NP_Pos,<%=actGCEVNP0_CEV4NP%>); 
   
                          <% } %>                 
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/5" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV5NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV5NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV5NP.compareTo(rstGCEVNP0_CEV5NP) != 0) && (actGCEVNP0_CEV5NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV5NP_Msk, VADC_G_CEVNP0_CEV5NP_Pos,<%=actGCEVNP0_CEV5NP%>); 
   
                          <% } %>                    
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/6" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV6NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV6NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV6NP.compareTo(rstGCEVNP0_CEV6NP) != 0) && (actGCEVNP0_CEV6NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV6NP_Msk, VADC_G_CEVNP0_CEV6NP_Pos,<%=actGCEVNP0_CEV6NP%>); 
   
                          <% } %>                  
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/ch/7" + "/gcevnp0_cevnp";%>						      
                     <% String rstGCEVNP0_CEV7NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGCEVNP0_CEV7NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGCEVNP0_CEV7NP.compareTo(rstGCEVNP0_CEV7NP) != 0) && (actGCEVNP0_CEV7NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->CEVNP0, VADC_G_CEVNP0_CEV7NP_Msk, VADC_G_CEVNP0_CEV7NP_Pos,<%=actGCEVNP0_CEV7NP%>); 
   
                          <% } %>                 
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result_adv/0" + "/grevnp0_rev0np";%>						      
                     <% String rstGREVNP0_REV0NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV0NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV0NP.compareTo(rstGREVNP0_REV0NP) != 0) && (actGREVNP0_REV0NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV0NP_Msk, VADC_G_REVNP0_REV0NP_Pos,<%=actGREVNP0_REV0NP%>); 
   
                          <% } %>                   
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result_adv/1" + "/grevnp0_rev1np";%>						      
                     <% String rstGREVNP0_REV1NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV1NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV1NP.compareTo(rstGREVNP0_REV1NP) != 0) && (actGREVNP0_REV1NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV1NP_Msk, VADC_G_REVNP0_REV1NP_Pos,<%=actGREVNP0_REV1NP%>); 
   
                          <% } %>           
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result_adv/2" + "/grevnp0_rev2np";%>						      
                     <% String rstGREVNP0_REV2NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV2NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV2NP.compareTo(rstGREVNP0_REV2NP) != 0) && (actGREVNP0_REV2NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV2NP_Msk, VADC_G_REVNP0_REV2NP_Pos,<%=actGREVNP0_REV2NP%>); 
   
                          <% } %>                
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result_adv/3" + "/grevnp0_rev3np";%>						      
                     <% String rstGREVNP0_REV3NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV3NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV3NP.compareTo(rstGREVNP0_REV3NP) != 0) && (actGREVNP0_REV3NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV3NP_Msk, VADC_G_REVNP0_REV3NP_Pos,<%=actGREVNP0_REV3NP%>); 
   
                          <% } %>                
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/4" + "/grevnp0_rev4np";%>						      
                     <% String rstGREVNP0_REV4NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV4NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV4NP.compareTo(rstGREVNP0_REV4NP) != 0) && (actGREVNP0_REV4NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV4NP_Msk, VADC_G_REVNP0_REV4NP_Pos,<%=actGREVNP0_REV4NP%>); 
   
                          <% } %>              
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/5" + "/grevnp0_rev5np";%>						      
                     <% String rstGREVNP0_REV5NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV5NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV5NP.compareTo(rstGREVNP0_REV5NP) != 0) && (actGREVNP0_REV5NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV5NP_Msk, VADC_G_REVNP0_REV5NP_Pos,<%=actGREVNP0_REV5NP%>); 
   
                          <% } %>              
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/6" + "/grevnp0_rev6np";%>						      
                     <% String rstGREVNP0_REV6NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV6NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV6NP.compareTo(rstGREVNP0_REV6NP) != 0) && (actGREVNP0_REV6NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV6NP_Msk, VADC_G_REVNP0_REV6NP_Pos,<%=actGREVNP0_REV6NP%>); 
   
                          <% } %>                 
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result_filter/7" + "/grevnp0_rev7np";%>						      
                     <% String rstGREVNP0_REV7NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP0_REV7NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP0_REV7NP.compareTo(rstGREVNP0_REV7NP) != 0) && (actGREVNP0_REV7NP.compareTo("") != 0)) { %>
  WR_REG(VADC_G<%=k%>->REVNP0, VADC_G_REVNP0_REV7NP_Msk, VADC_G_REVNP0_REV7NP_Pos,<%=actGREVNP0_REV7NP%>); 
   
                          <% } %>                 
                 <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/8" + "/grevnp1_rev8np";%>						      
                     <% String rstGREVNP1_REV8NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV8NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV8NP.compareTo(rstGREVNP1_REV8NP) != 0) && (actGREVNP1_REV8NP.compareTo("") != 0)) { %>   
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV8NP_Msk, VADC_G_REVNP1_REV8NP_Pos,<%=actGREVNP1_REV8NP%>); 
   
                          <% } %>                                
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/9" + "/grevnp1_rev9np";%>						      
                     <% String rstGREVNP1_REV9NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV9NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV9NP.compareTo(rstGREVNP1_REV9NP) != 0) && (actGREVNP1_REV9NP.compareTo("") != 0)) { %> 
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV9NP_Msk, VADC_G_REVNP1_REV9NP_Pos,<%=actGREVNP1_REV9NP%>); 
   
                          <% } %>                    
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/10" + "/grevnp1_rev10np";%>						      
                     <% String rstGREVNP1_REV10NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV10NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV10NP.compareTo(rstGREVNP1_REV10NP) != 0) && (actGREVNP1_REV10NP.compareTo("") != 0)) { %>     
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV10NP_Msk, VADC_G_REVNP1_REV10NP_Pos,<%=actGREVNP1_REV10NP%>); 
   
                          <% } %>               
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/11" + "/grevnp1_rev11np";%>						      
                     <% String rstGREVNP1_REV11NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV11NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV11NP.compareTo(rstGREVNP1_REV11NP) != 0) && (actGREVNP1_REV11NP.compareTo("") != 0)) { %>      
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV11NP_Msk, VADC_G_REVNP1_REV11NP_Pos,<%=actGREVNP1_REV11NP%>); 
   
                          <% } %>                   
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/12" + "/grevnp1_rev12np";%>						      
                     <% String rstGREVNP1_REV12NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV12NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV12NP.compareTo(rstGREVNP1_REV12NP) != 0) && (actGREVNP1_REV12NP.compareTo("") != 0)) { %>   
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV12NP_Msk, VADC_G_REVNP1_REV12NP_Pos,<%=actGREVNP1_REV12NP%>); 
   
                          <% } %>            
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/13" + "/grevnp1_rev13np";%>						      
                     <% String rstGREVNP1_REV13NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV13NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV13NP.compareTo(rstGREVNP1_REV13NP) != 0) && (actGREVNP1_REV13NP.compareTo("") != 0)) { %>     
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV13NP_Msk, VADC_G_REVNP1_REV13NP_Pos,<%=actGREVNP1_REV13NP%>); 
   
                          <% } %>                
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result/14" + "/grevnp1_rev14np";%>						      
                     <% String rstGREVNP1_REV14NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV14NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV14NP.compareTo(rstGREVNP1_REV14NP) != 0) && (actGREVNP1_REV14NP.compareTo("") != 0)) { %> 
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV14NP_Msk, VADC_G_REVNP1_REV14NP_Pos,<%=actGREVNP1_REV14NP%>); 
   
                          <% } %>              
                  <% VadcSfruri =  VadcBaseuri + 0 + "/group/" + k + "/result_filter/15" + "/grevnp1_rev15np";%>						      
                     <% String rstGREVNP1_REV15NP = app.getResetValue(VadcSfruri);%> 
                     <% String actGREVNP1_REV15NP = app.getMuxValue(VadcSfruri);%>  
                     <% if((actGREVNP1_REV15NP.compareTo(rstGREVNP1_REV15NP) != 0) && (actGREVNP1_REV15NP.compareTo("") != 0)) { %>      
  WR_REG(VADC_G<%=k%>->REVNP1, VADC_G_REVNP1_REV15NP_Msk, VADC_G_REVNP1_REV15NP_Pos,<%=actGREVNP1_REV15NP%>); 
   
                          <% } %>                      
               <% } %>  
               /*VADC GLOBAL RESULT Mux Related SFR/Bitfields Configurations*/  
               <% VadcSfruri =  VadcBaseuri + 0 + "/global_result" + "/globevnp_rev0np";%>						      
               <% String rstGLOBEVNP_REV0NP = app.getResetValue(VadcSfruri);%> 
               <% String actGLOBEVNP_REV0NP = app.getMuxValue(VadcSfruri);%>  
               <% if((actGLOBEVNP_REV0NP.compareTo(rstGLOBEVNP_REV0NP) != 0) && (actGLOBEVNP_REV0NP.compareTo("") != 0)) { %> 
  WR_REG(VADC->GLOBEVNP, VADC_GLOBEVNP_REV0NP_Msk, VADC_GLOBEVNP_REV0NP_Pos,<%=actGLOBEVNP_REV0NP%>); 
   
                  <% } %>              
               <% VadcSfruri =  VadcBaseuri + 0 + "/global/emuxsel_emuxgrp0";%>						      
               <% String rstEMUXSEL_EMUXGRP0 = app.getResetValue(VadcSfruri);%> 
               <% String actEMUXSEL_EMUXGRP0 = app.getMuxValue(VadcSfruri);%>  
               <% if((actEMUXSEL_EMUXGRP0.compareTo(rstEMUXSEL_EMUXGRP0) != 0) && (actEMUXSEL_EMUXGRP0.compareTo("") != 0)) { %>   
  WR_REG(VADC->EMUXSEL, VADC_EMUXSEL_EMUXGRP0_Msk, VADC_EMUXSEL_EMUXGRP0_Pos,<%=actEMUXSEL_EMUXGRP0%>); 
   
                  <% } %>            
               <% VadcSfruri =  VadcBaseuri + 0 + "/global/emuxsel_emuxgrp1";%>						      
               <% String rstEMUXSEL_EMUXGRP1 = app.getResetValue(VadcSfruri);%> 
               <% String actEMUXSEL_EMUXGRP1 = app.getMuxValue(VadcSfruri);%>  
               <% if((actEMUXSEL_EMUXGRP1.compareTo(rstEMUXSEL_EMUXGRP1) != 0) && (actEMUXSEL_EMUXGRP1.compareTo("") != 0)) { %>  
  WR_REG(VADC->EMUXSEL, VADC_EMUXSEL_EMUXGRP1_Msk, VADC_EMUXSEL_EMUXGRP1_Pos,<%=actEMUXSEL_EMUXGRP1%>); 
   
                  <% } %>                        
               /*VADC BACKGROUND Source Mux Related SFR/Bitfields Configurations*/  
               <% VadcSfruri =  VadcBaseuri + 0 + "/backgnd" + "/brsctrl_xtsel";%>						      
               <% String rstBRSCTRL_XTSEL = app.getResetValue(VadcSfruri);%> 
               <% String actBRSCTRL_XTSEL = app.getMuxValue(VadcSfruri);%>  
               <% if((actBRSCTRL_XTSEL.compareTo(rstBRSCTRL_XTSEL) != 0) && (actBRSCTRL_XTSEL.compareTo("") != 0)) { %>     
  WR_REG(VADC->BRSCTRL, VADC_BRSCTRL_XTWC_XTSEL_Msk, VADC_BRSCTRL_XTSEL_Pos, \
   (((((VADC->BRSCTRL) & VADC_BRSCTRL_XTMODE_Msk) | VADC_BRSCTRL_XTWC_Msk) >> VADC_BRSCTRL_XTSEL_Pos) | <%=actBRSCTRL_XTSEL%>));

                  <% } %>         
               <% VadcSfruri =  VadcBaseuri + 0 + "/backgnd" + "/brsctrl_gtsel";%>						      
               <% String rstBRSCTRL_GTSEL = app.getResetValue(VadcSfruri);%> 
               <% String actBRSCTRL_GTSEL = app.getMuxValue(VadcSfruri);%>  
               <% if((actBRSCTRL_GTSEL.compareTo(rstBRSCTRL_GTSEL) != 0) && (actBRSCTRL_GTSEL.compareTo("") != 0)) { %>    
  WR_REG(VADC->BRSCTRL, VADC_BRSCTRL_GTWC_GTSEL_Msk, VADC_BRSCTRL_GTSEL_Pos, \
   (((VADC_BRSCTRL_GTWC_Msk) >> VADC_BRSCTRL_GTSEL_Pos) | <%=actBRSCTRL_GTSEL%>)); 

                  <% } %>       
               <% VadcSfruri =  VadcBaseuri + 0 + "/backgnd" + "/globevnp_sev0np";%>						      
               <% String rstGLOBEVNP_SEV0NP = app.getResetValue(VadcSfruri);%> 
               <% String actGLOBEVNP_SEV0NP = app.getMuxValue(VadcSfruri);%>                 
               <% if((actGLOBEVNP_SEV0NP.compareTo(rstGLOBEVNP_SEV0NP) != 0) && (actGLOBEVNP_SEV0NP.compareTo("") != 0)) { %>  
  WR_REG(VADC->GLOBEVNP, VADC_GLOBEVNP_SEV0NP_Msk, VADC_GLOBEVNP_SEV0NP_Pos,<%=actGLOBEVNP_SEV0NP%>); 
   
                  <% } %>                       
    <% } %>   
<% //********* VADC CONFIGURATIONS ---  END ************************* %>  
<% //********* DAC CONFIGURATIONS ---  BEGIN ************************* %>    
    <% if (MyObj.toString().equals("peripheral/dac")) { %>
       /*        DAC Macro definitions     */               
        <%  String uriDAC = null;
        for (int sliceNr=0; sliceNr<=1; sliceNr++) {
        uriDAC = "peripheral/dac/0/slice/" + sliceNr + "/cfg1_trigsel";           
        if((app.getMuxValue(uriDAC).compareTo(app.getResetValue(uriDAC)) != 0) && (app.getMuxValue(uriDAC).compareTo("") != 0)) { %>
            
  WR_REG(DAC->DAC<%= sliceNr%>CFG1, DAC_DAC<%= sliceNr%>CFG1_TRIGSEL_Msk, DAC_DAC<%= sliceNr%>CFG1_TRIGSEL_Pos, VALUE<%= app.getMuxValue(uriDAC) %>);                /*    DAC->DAC<%= sliceNr%>CFG1_TRIGSEL */
        <% } 
        }
     } // if dac loop %> 
<% //********* DAC CONFIGURATIONS ---  END ************************* %>    
<%if (xmc4Device==1){%>
<% //********* SCU CONFIGURATIONS ---  BEGIN ************************* %>    
    <% if (MyObj.toString().equals("peripheral/scu")) { %>
       /*        SCU Macro definitions     */               
        <%  String uriSCU = null;
           uriSCU = "peripheral/scu/0/hcu/hdcr_gpi0sel";           
        if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>

  WR_REGHIB(SCU_HIBERNATE->HDCR, SCU_HIBERNATE_HDCR_GPI0SEL_Msk, SCU_HIBERNATE_HDCR_GPI0SEL_Pos, VALUE<%= app.getMuxValue(uriSCU) %>);                /*    SCU_HIBERNATE->HDCR_GPI0SEL */        
          <% } 
        uriSCU = "peripheral/scu/0/hcu/hdcr_wkupsel";           
        if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>
        
  WR_REGHIB(SCU_HIBERNATE->HDCR, SCU_HIBERNATE_HDCR_WKUPSEL_Msk, SCU_HIBERNATE_HDCR_WKUPSEL_Pos, VALUE<%= app.getMuxValue(uriSCU) %>);                /*    SCU_HIBERNATE->HDCR_WKUPSEL */
        <% }  
        for (int hibpadNr=0; hibpadNr<=1; hibpadNr++) { 
          uriSCU = "port/hcu_port/0/pad/" + hibpadNr + "/hdcr_hibioxsel_oe";           
          if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>

  WR_REGHIB(SCU_HIBERNATE->HDCR, SCU_HIBERNATE_HDCR_HIBIO<%= hibpadNr%>SEL_OE_Msk, SCU_HIBERNATE_HDCR_HIBIO<%= hibpadNr%>SEL_OE_Pos, PORT_IOCR_OE<%= app.getMuxValue(uriSCU) %>, SCU_INTERRUPT_SRRAW_HDCR_Msk);                /*    SCU_HIBERNATE->HDCR_HIBIO<%= hibpadNr%>SEL_OE */        
          <% } 
          uriSCU = "port/hcu_port/0/pad/" + hibpadNr + "/hdcr_hibioxsel_pcr";           
          if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>
        
  WR_REGHIB(SCU_HIBERNATE->HDCR, SCU_HIBERNATE_HDCR_HIBIO<%= hibpadNr%>SEL_PCR_Msk, SCU_HIBERNATE_HDCR_HIBIO<%= hibpadNr%>SEL_PCR_Pos, PORT_IOCR_PCR<%= app.getMuxValue(uriSCU) %>, SCU_INTERRUPT_SRRAW_HDCR_Msk);                /*    SCU_HIBERNATE->HDCR_HIBIO<%= hibpadNr%>SEL_PCR */
          <% } 
        } // hibpadNr loop         
        uriSCU = "peripheral/scu/0/gcu/interrupt/prewarn/nmireqen_prwarn";           
        if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>
        
  WR_REG(SCU_INTERRUPT->NMIREQEN, SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, SCU_INTERRUPT_NMIREQEN_PRWARN_Pos, VALUE<%= app.getMuxValue(uriSCU) %>);                /*    SCU_INTERRUPT->NMIREQEN_PRWARN */
        <% }
        uriSCU = "peripheral/scu/0/gcu/interrupt/rtctick/nmireqen_pi";           
        if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>
            
  WR_REG(SCU_INTERRUPT->NMIREQEN, SCU_INTERRUPT_NMIREQEN_PI_Msk, SCU_INTERRUPT_NMIREQEN_PI_Pos, VALUE<%= app.getMuxValue(uriSCU) %>);                /*    SCU_INTERRUPT->NMIREQEN_PI */
        <% } 
        uriSCU = "peripheral/scu/0/gcu/interrupt/rtcalarm/nmireqen_ai";           
        if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>
        
  WR_REG(SCU_INTERRUPT->NMIREQEN, SCU_INTERRUPT_NMIREQEN_AI_Msk, SCU_INTERRUPT_NMIREQEN_AI_Pos, VALUE<%= app.getMuxValue(uriSCU) %>);                /*    SCU_INTERRUPT->NMIREQEN_AI */
        <% }
		for (int nmiEruNr=0; nmiEruNr<=3; nmiEruNr++) {
			uriSCU = "peripheral/scu/0/gcu/interrupt/nmireqen_eru0" + nmiEruNr;           
			if((app.getMuxValue(uriSCU).compareTo(app.getResetValue(uriSCU)) != 0) && (app.getMuxValue(uriSCU).compareTo("") != 0)) { %>
        
  WR_REG(SCU_INTERRUPT->NMIREQEN, SCU_INTERRUPT_NMIREQEN_ERU0<%= nmiEruNr%>_Msk, SCU_INTERRUPT_NMIREQEN_ERU0<%= nmiEruNr%>_Pos, VALUE<%= app.getMuxValue(uriSCU) %>);                /*    SCU_INTERRUPT->NMIREQEN_ERU0<%= nmiEruNr%> */
			<% }
		} // nmiEruNr loop
     } // if scu loop %> 
<% //********* SCU CONFIGURATIONS ---  END ************************* %>
<%} %>
<%if (xmc1Device==1){%>
<% //********* SCU CONFIGURATIONS ---  BEGIN ************************* %>    
  <% if (MyObj.toString().equals("peripheral/scu")) {  %>
       /*        SCU Macro definitions     */  
           <%  String uriSCU_CCU = null;
                uriSCU_CCU = "peripheral/scu/0/ccu/config/clkcr_rtcclksel";
                if((app.getMuxValue(uriSCU_CCU).compareTo(app.getResetValue(uriSCU_CCU)) != 0) && (app.getMuxValue(uriSCU_CCU).compareTo("") != 0)) { %>
                  SCU_GENERAL->PASSWD = 0x000000C0UL;
  WR_REG(SCU_CLK->CLKCR, SCU_CLK_CLKCR_RTCCLKSEL_Msk, SCU_CLK_CLKCR_RTCCLKSEL_Pos, <%= app.getMuxValue(uriSCU_CCU) %>);                /*    SCU_CLOCK->CLKCR_RTCCLKSEL */
                  SCU_GENERAL->PASSWD = 0x000000C3UL;
				<% } 
      		  String uriSCU_CMPCU = null;
                uriSCU_CMPCU = "peripheral/scu/0/cmpcu/anacmp/0/acmp_sel";
                if((app.getMuxValue(uriSCU_CMPCU).compareTo(app.getResetValue(uriSCU_CMPCU)) != 0) && (app.getMuxValue(uriSCU_CMPCU).compareTo("") != 0)) { %>

  WR_REG(COMPARATOR->ANACMP0, COMPARATOR_ANACMP0_ACMP0_SEL_Msk, COMPARATOR_ANACMP0_ACMP0_SEL_Pos, <%= app.getMuxValue(uriSCU_CMPCU) %>);                /*    COMPARATOR->ANACMP0_ACMP0_SEL */
                <% }
                uriSCU_CMPCU = "peripheral/scu/0/cmpcu/anacmp/1/ref_div_en";
                if((app.getMuxValue(uriSCU_CMPCU).compareTo(app.getResetValue(uriSCU_CMPCU)) != 0) && (app.getMuxValue(uriSCU_CMPCU).compareTo("") != 0)) { %>

  WR_REG(COMPARATOR->ANACMP1, COMPARATOR_ANACMP1_REF_DIV_EN_Msk, COMPARATOR_ANACMP1_REF_DIV_EN_Pos, <%= app.getMuxValue(uriSCU_CMPCU) %>);                /*    COMPARATOR->ANACMP1_REF_DIV_EN */
                <% }
                uriSCU_CMPCU = "peripheral/scu/0/cmpcu/anacmp/2/acmp_sel";
                if((app.getMuxValue(uriSCU_CMPCU).compareTo(app.getResetValue(uriSCU_CMPCU)) != 0) && (app.getMuxValue(uriSCU_CMPCU).compareTo("") != 0)) { %>

  WR_REG(COMPARATOR->ANACMP2, COMPARATOR_ANACMP2_ACMP2_SEL_Msk, COMPARATOR_ANACMP2_ACMP2_SEL_Pos, <%= app.getMuxValue(uriSCU_CMPCU) %>);                /*    COMPARATOR->ANACMP2_ACMP2_SEL */
                <% }
     } // if loop %>
<% //********* SCU CONFIGURATIONS ---  END ************************* %>
<% //********* LEDTS CONFIGURATIONS ---  BEGIN ************************* %>    
  <% if (MyObj.toString().equals("peripheral/ledts")) {  %>
/*        LEDTS Macro definitions:         */  
           <%  String uriLEDTS = null;
               uriLEDTS = "peripheral/ledts/1/global/globctl_ensync";
               if((app.getMuxValue(uriLEDTS).compareTo(app.getResetValue(uriLEDTS)) != 0) && (app.getMuxValue(uriLEDTS).compareTo("") != 0)) { %>

  WR_REG(LEDTS1->GLOBCTL, LEDTS_GLOBCTL_CLK_PS_Msk, LEDTS_GLOBCTL_CLK_PS_Pos, 0);                								/*    LEDTS1->GLOBCTL_CLK_PS */
  WR_REG(LEDTS1->GLOBCTL, LEDTS_GLOBCTL_ENSYNC_Msk, LEDTS_GLOBCTL_ENSYNC_Pos, <%= app.getMuxValue(uriLEDTS) %>);                /*    LEDTS1->GLOBCTL_ENSYNC */
               <% }
     } // if loop %>
<% //********* LEDTS-1 CONFIGURATIONS ---  END ************************* %>
<% //********* BCCU CONFIGURATIONS ---  BEGIN ************************* %>    
  <% if (MyObj.toString().equals("peripheral/bccu")) {  %>
/*        BCCU Macro definitions:         */ 
           <%  String uriBCCU = null;
               for (int chNr=0; chNr<=8; chNr++) {
                uriBCCU = "peripheral/bccu/0/channel/" + chNr + "/chconfig_dsel";
                if((app.getMuxValue(uriBCCU).compareTo(app.getResetValue(uriBCCU)) != 0) && (app.getMuxValue(uriBCCU).compareTo("") != 0)) { %>

  WR_REG(BCCU0_CH<%= chNr%>->CHCONFIG, BCCU_CH_CHCONFIG_DSEL_Msk, BCCU_CH_CHCONFIG_DSEL_Pos, <%= app.getMuxValue(uriBCCU) %>);                /*    BCCU_CHCONFIG<%= chNr%>_DSEL */
                <% } // if statement.
           } // chNr loop.
                uriBCCU = "peripheral/bccu/0/trap/globcon_trapis";
                if((app.getMuxValue(uriBCCU).compareTo(app.getResetValue(uriBCCU)) != 0) && (app.getMuxValue(uriBCCU).compareTo("") != 0)) { %>

  WR_REG(BCCU0->GLOBCON, BCCU_GLOBCON_TRAPIS_Msk, BCCU_GLOBCON_TRAPIS_Pos, <%= app.getMuxValue(uriBCCU) %>);                /*    BCCU_GLOBCON_TRAPIS */
                <% } // if statement.
     } // if loop %>
<% //********* BCCU CONFIGURATIONS ---  END ************************* %>
<%} %>
<% //********* ERU CONFIGURATIONS ---  BEGIN ************************* %>    
  <% if (MyObj.toString().equals("peripheral/eru")) {  %>
           <%  String uriERU = null;
           for (int eruNr=0; eruNr<=1; eruNr++) { %>  
/*        ERU<%= eruNr%> Macro definitions:         */  
           <% for (int ersNr=0; ersNr<=3; ersNr++) {
                uriERU = "peripheral/eru/" + eruNr + "/ers_etl/" + ersNr + "/exisel_exsxa";
                if((app.getMuxValue(uriERU).compareTo(app.getResetValue(uriERU)) != 0) && (app.getMuxValue(uriERU).compareTo("") != 0)) { %>

  WR_REG(ERU<%= eruNr%>->EXISEL, ERU_EXISEL_EXS<%= ersNr%>A_Msk, ERU_EXISEL_EXS<%= ersNr%>A_Pos, SIGNAL_ERU_xA<%= app.getMuxValue(uriERU) %>);                /*    ERU<%= eruNr%>_EXISEL_EXS<%= ersNr%>A */
                <% } 
                uriERU = "peripheral/eru/" + eruNr + "/ers_etl/" + ersNr + "/exisel_exsxb";
                if((app.getMuxValue(uriERU).compareTo(app.getResetValue(uriERU)) != 0) && (app.getMuxValue(uriERU).compareTo("") != 0)) { %>

  WR_REG(ERU<%= eruNr%>->EXISEL, ERU_EXISEL_EXS<%= ersNr%>B_Msk, ERU_EXISEL_EXS<%= ersNr%>B_Pos, SIGNAL_ERU_xB<%= app.getMuxValue(uriERU) %>);                /*    ERU<%= eruNr%>_EXISEL_EXS<%= ersNr%>B */
                <% }
                uriERU = "peripheral/eru/" + eruNr + "/ers_etl/" + ersNr + "/exicon_pe";
                if((app.getMuxValue(uriERU).compareTo(app.getResetValue(uriERU)) != 0) && (app.getMuxValue(uriERU).compareTo("") != 0)) { %>

  WR_REG(ERU<%= eruNr%>->EXICON[<%= ersNr%>], ERU_EXICON_PE_Msk, ERU_EXICON_PE_Pos, SIGNAL_TR<%= app.getMuxValue(uriERU) %>);                            /*    ERU<%= eruNr%>_EXICON[<%= ersNr%>]_PE */
                <% }
                uriERU = "peripheral/eru/" + eruNr + "/ers_etl/" + ersNr + "/exicon_ocs";
                if((app.getMuxValue(uriERU).compareTo(app.getResetValue(uriERU)) != 0) && (app.getMuxValue(uriERU).compareTo("") != 0)) { %>

  WR_REG(ERU<%= eruNr%>->EXICON[<%= ersNr%>], ERU_EXICON_OCS_Msk, ERU_EXICON_OCS_Pos, SIGNAL_TRx<%= app.getMuxValue(uriERU) %>);                        /*    ERU<%= eruNr%>_EXICON[<%= ersNr%>]_OCS */
                <% } 
            } // ersNr loop 
            for (int oguNr=0; oguNr<=3; oguNr++) {
                for (int ipenNr=0; ipenNr<=3; ipenNr++) {
                    uriERU = "peripheral/eru/" + eruNr + "/ogu/" + oguNr + "/exocon_ipen" + ipenNr;
                    if((app.getMuxValue(uriERU).compareTo(app.getResetValue(uriERU)) != 0) && (app.getMuxValue(uriERU).compareTo("") != 0)) { %>
        
  WR_REG(ERU<%= eruNr%>->EXOCON[<%= oguNr%>], ERU_EXOCON_IPEN<%= ipenNr%>_Msk, ERU_EXOCON_IPEN<%= ipenNr%>_Pos, SIGNAL_ERS_ETL_FL<%= app.getMuxValue(uriERU) %>);            /*    ERU<%= eruNr%>_EXOCON[<%= oguNr%>]_IPEN<%= ipenNr%> */
                    <% }
                } // ipen loop
                uriERU = "peripheral/eru/" + eruNr + "/ogu/" + oguNr + "/exocon_iss";
                if((app.getMuxValue(uriERU).compareTo(app.getResetValue(uriERU)) != 0) && (app.getMuxValue(uriERU).compareTo("") != 0)) { %>
    
  WR_REG(ERU<%= eruNr%>->EXOCON[<%= oguNr%>], ERU_EXOCON_ISS_Msk, ERU_EXOCON_ISS_Pos, SIGNAL_ERU_OGU_y<%= app.getMuxValue(uriERU) %>);                    /*    ERU<%= eruNr%>_EXOCON[<%= oguNr%>]_ISS */
                <% } 
            } // oguNr loop            
        } // eruNr loop
     } // if eru loop %>
<% //********* ERU CONFIGURATIONS ---  END ************************* %>
<% //********* PORT CONFIGURATIONS ---  BEGIN ************************* %>
   <% if (MyObj.toString().equals("port/p")) { %>

/*        PORT Macro definitions for IOCR_OE, IOCR_PCR & HWSEL_HW     */               
    <%  String uriPORT = null;
        int firstPadNr = 0;
        int lastPadNr = 15;
        int iomode = 0;
        for (int portNr=0; portNr<=15; portNr++) {     
            if (portNr==4) {lastPadNr = 7;}
            if (portNr==5) {lastPadNr = 11;}
            if (portNr==6) {lastPadNr = 6;}
            if (portNr==15) {firstPadNr = 2;}
            if ((portNr<=6) | (portNr==14)| (portNr==15)) {
               for (int padNr=firstPadNr; padNr<=lastPadNr; padNr++) { 
                   if (!(((portNr==14) | (portNr==15)) & ((padNr==10)|(padNr==11)))) { 
                       uriPORT = "port/p/" + portNr + "/pad/" + padNr + "/iocr_oe";
                       if((app.getMuxValue(uriPORT).compareTo(app.getResetValue(uriPORT)) != 0) && (app.getMuxValue(uriPORT).compareTo("") != 0)) {
                       iomode = Integer.parseInt(app.getMuxValue(uriPORT));
                       }
					   if (iomode == 1) {
                       uriPORT = "port/p/" + portNr + "/pad/" + padNr + "/pdisc_pdis";
                       if((app.getMuxValue(uriPORT).compareTo(app.getResetValue(uriPORT)) != 0) && (app.getMuxValue(uriPORT).compareTo("") != 0)) { %>
           
  WR_REG(PORT<%= portNr%>->PDISC, PORT<%= portNr%>_PDISC_PDIS<%= padNr%>_Msk, PORT<%= portNr%>_PDISC_PDIS<%= padNr%>_Pos, PORT_PDISC_PDIS<%= app.getMuxValue(uriPORT) %>);            /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_PDISC_PDIS<%= padNr%> */
                       <% }					   
					   uriPORT = "port/p/" + portNr + "/pad/" + padNr + "/hwsel_hw";
                       if((app.getMuxValue(uriPORT).compareTo(app.getResetValue(uriPORT)) != 0) && (app.getMuxValue(uriPORT).compareTo("") != 0)) { 
                       int hwsel = Integer.parseInt(app.getMuxValue(uriPORT)); if (hwsel > 0) { hwsel = hwsel - 1; %>
           
  WR_REG(PORT<%= portNr%>->HWSEL, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Msk, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Pos, PORT_HWSEL_HW<%= hwsel %>);                    /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_HWSEL_HW<%= padNr%> */  
                       <% } else if (hwsel == 0) { %> 
              
  WR_REG(PORT<%= portNr%>->HWSEL, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Msk, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Pos, PORT_HWSEL_SW);                    /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_HWSEL_HW<%= padNr%> */  
                       <% } }
                       uriPORT = "port/p/" + portNr + "/pad/" + padNr + "/iocr_pcr";
                       if((app.getMuxValue(uriPORT).compareTo(app.getResetValue(uriPORT)) != 0) && (app.getMuxValue(uriPORT).compareTo("") != 0)) { %>
           
  WR_REG(PORT<%= portNr%>->IOCR<%= ((padNr / 4) * 4)%>, PORT_IOCR_PC<%= padNr - ((padNr / 4) * 4)%>_PCR_Msk, PORT_IOCR_PC<%= padNr - ((padNr / 4) * 4)%>_PCR_Pos, PORT_IOCR_PCR<%= app.getMuxValue(uriPORT) %>);            /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_IOCR<%= ((padNr / 4) * 4)%>_PC<%= padNr%>_PCR */
                       <% }
                       uriPORT = "port/p/" + portNr + "/pad/" + padNr + "/iocr_oe";
                       if((app.getMuxValue(uriPORT).compareTo(app.getResetValue(uriPORT)) != 0) && (app.getMuxValue(uriPORT).compareTo("") != 0)) { %>

  WR_REG(PORT<%= portNr%>->IOCR<%= ((padNr / 4) * 4)%>, PORT_IOCR_PC<%= padNr - ((padNr / 4) * 4)%>_OE_Msk, PORT_IOCR_PC<%= padNr - ((padNr / 4) * 4)%>_OE_Pos, PORT_IOCR_OE<%= app.getMuxValue(uriPORT) %>);                /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_IOCR<%= ((padNr / 4) * 4)%>_PC<%= padNr%>_OE */					   
                       <% }
					   iomode = 0; }
                    } // if portNr(14,15)& padNr(14,15) loop     
                } // padNr loop
            } // if portNr(6,14,15) loop 
            firstPadNr = 0; lastPadNr = 15;
        } // portNr loop     
    } // if port loop %>    
<% //********* PORT CONFIGURATIONS ---  END ************************* %>
    <% } %>
}


/*******************************************************************************
** Syntax           : void DAVE_MUX_PreInit(void)                             **
**                                                                            **
** Reentrancy       : None                                                    **
**                                                                            **
** Parameters (in)  : void                                                    **
**                                                                            **
** Parameters (out) : none                                                    **
**                                                                            **
** Return value     : none                                                    **
**                                                                            **
** Description      : This is the Mux configuration                           **
**                                                                            **
*******************************************************************************/
 
void DAVE_MUX_PreInit(void)
{
<% 
   String MyTempPeriName1 = null;
   Object MyObj1 = null; 	
   Set set1 = PeriHashMap.entrySet(); 
   Iterator i1 = set.iterator();
     while(i1.hasNext()) { 
     Map.Entry peri_me1 = (Map.Entry)i1.next();  
           MyObj1 = peri_me1.getKey();              
           MyTempPeriName1 = MyObj1.toString(); 

   //********* PORT CONFIGURATIONS ---  BEGIN *************************
      if (MyObj1.toString().equals("port/p")) { %>

/*        PORT Macro definitions for IOCR_OE, IOCR_PCR & HWSEL_HW     */               
    <%  String uriPORT1 = null;
        int firstPadNr1 = 0;
        int lastPadNr1 = 15;
        int iomode1 = 0;
        for (int portNr=0; portNr<=15; portNr++) {     
            if (portNr==4) {lastPadNr1 = 7;}
            if (portNr==5) {lastPadNr1 = 11;}
            if (portNr==6) {lastPadNr1 = 6;}
            if (portNr==15) {firstPadNr1 = 2;}
            if ((portNr<=6) | (portNr==14)| (portNr==15)) {
               for (int padNr=firstPadNr1; padNr<=lastPadNr1; padNr++) { 
                   if (!(((portNr==14) | (portNr==15)) & ((padNr==10)|(padNr==11)))) { 
                       uriPORT1 = "port/p/" + portNr + "/pad/" + padNr + "/iocr_oe";
                       if((app.getMuxValue(uriPORT1).compareTo(app.getResetValue(uriPORT1)) != 0) && (app.getMuxValue(uriPORT1).compareTo("") != 0)) {
                       iomode1 = Integer.parseInt(app.getMuxValue(uriPORT1));
                       } 
					   if (iomode1 == 0) {
                       uriPORT1 = "port/p/" + portNr + "/pad/" + padNr + "/pdisc_pdis";
                       if((app.getMuxValue(uriPORT1).compareTo(app.getResetValue(uriPORT1)) != 0) && (app.getMuxValue(uriPORT1).compareTo("") != 0)) { %>
           
  WR_REG(PORT<%= portNr%>->PDISC, PORT<%= portNr%>_PDISC_PDIS<%= padNr%>_Msk, PORT<%= portNr%>_PDISC_PDIS<%= padNr%>_Pos, PORT_PDISC_PDIS<%= app.getMuxValue(uriPORT1) %>);            /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_PDISC_PDIS<%= padNr%> */
                       <% }
					   uriPORT1 = "port/p/" + portNr + "/pad/" + padNr + "/hwsel_hw";
                       if((app.getMuxValue(uriPORT1).compareTo(app.getResetValue(uriPORT1)) != 0) && (app.getMuxValue(uriPORT1).compareTo("") != 0)) { 
                       int hwsel1 = Integer.parseInt(app.getMuxValue(uriPORT1)); if (hwsel1 > 0) { hwsel1 = hwsel1 - 1; %>
           
  WR_REG(PORT<%= portNr%>->HWSEL, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Msk, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Pos, PORT_HWSEL_HW<%= hwsel1 %>);                    /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_HWSEL_HW<%= padNr%> */  
                       <% } else if (hwsel1 == 0) { %> 
              
  WR_REG(PORT<%= portNr%>->HWSEL, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Msk, PORT<%= portNr%>_HWSEL_HW<%= padNr%>_Pos, PORT_HWSEL_SW);                    /*    P<%= portNr%>.<%= padNr%> : PORT<%= portNr%>_HWSEL_HW<%= padNr%> */  
                       <% } }					   
                       } else { iomode1 = 0; }
                    } // if portNr(14,15)& padNr(14,15) loop     
                } // padNr loop
            } // if portNr(6,14,15) loop 
            firstPadNr1 = 0; lastPadNr1 = 15;
        } // portNr loop     
    } // if port loop %>    
<% //********* PORT CONFIGURATIONS ---  END ************************* %>
    <% } %>
}
